
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.3.0.5
//   File : UserAuthDataSchema_reflection.h
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#pragma once

#include "UserAuthDataSchema_types.h"
#include <bond/core/reflection.h>
#include "BaseClasses_reflection.h"

namespace HealthCare
{
namespace Schemas
{
    //
    // AppAuthorization
    //
    struct AppAuthorization::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_ClientId_metadata;
        private: static const bond::Metadata s_Scopes_metadata;

        public: struct var
        {
            // ClientId
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                AppAuthorization,
                bond::maybe<bond::nullable<std::string> >,
                &AppAuthorization::ClientId,
                &s_ClientId_metadata
            > ClientId;
        
            // Scopes
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                AppAuthorization,
                std::vector<std::string>,
                &AppAuthorization::Scopes,
                &s_Scopes_metadata
            > Scopes;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::Scopes>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::ClientId>::type fields2;

        public: typedef fields2::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("AppAuthorization", "HealthCare.Schemas.AppAuthorization",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // UserAuthData
    //
    struct UserAuthData::Schema
    {
        typedef ::HealthCare::Schemas::BaseEntity base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_PasswordHash_metadata;
        private: static const bond::Metadata s_IsLockoutEnabled_metadata;
        private: static const bond::Metadata s_LockoutEndDate_metadata;
        private: static const bond::Metadata s_IsPasswordResetRequired_metadata;
        private: static const bond::Metadata s_OriginalJson_metadata;
        private: static const bond::Metadata s_LatestJson_metadata;
        private: static const bond::Metadata s_LastLogin_metadata;
        private: static const bond::Metadata s_Authorizations_metadata;

        public: struct var
        {
            // PasswordHash
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                UserAuthData,
                bond::maybe<bond::nullable<std::string> >,
                &UserAuthData::PasswordHash,
                &s_PasswordHash_metadata
            > PasswordHash;
        
            // IsLockoutEnabled
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                UserAuthData,
                bond::maybe<bond::nullable<bool> >,
                &UserAuthData::IsLockoutEnabled,
                &s_IsLockoutEnabled_metadata
            > IsLockoutEnabled;
        
            // LockoutEndDate
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                UserAuthData,
                bond::maybe<bond::nullable<int64_t> >,
                &UserAuthData::LockoutEndDate,
                &s_LockoutEndDate_metadata
            > LockoutEndDate;
        
            // IsPasswordResetRequired
            typedef bond::reflection::FieldTemplate<
                3,
                bond::reflection::optional_field_modifier,
                UserAuthData,
                bond::maybe<bond::nullable<bool> >,
                &UserAuthData::IsPasswordResetRequired,
                &s_IsPasswordResetRequired_metadata
            > IsPasswordResetRequired;
        
            // OriginalJson
            typedef bond::reflection::FieldTemplate<
                4,
                bond::reflection::optional_field_modifier,
                UserAuthData,
                bond::maybe<bond::nullable<std::string> >,
                &UserAuthData::OriginalJson,
                &s_OriginalJson_metadata
            > OriginalJson;
        
            // LatestJson
            typedef bond::reflection::FieldTemplate<
                5,
                bond::reflection::optional_field_modifier,
                UserAuthData,
                bond::maybe<bond::nullable<std::string> >,
                &UserAuthData::LatestJson,
                &s_LatestJson_metadata
            > LatestJson;
        
            // LastLogin
            typedef bond::reflection::FieldTemplate<
                6,
                bond::reflection::optional_field_modifier,
                UserAuthData,
                bond::maybe<bond::nullable<int64_t> >,
                &UserAuthData::LastLogin,
                &s_LastLogin_metadata
            > LastLogin;
        
            // Authorizations
            typedef bond::reflection::FieldTemplate<
                7,
                bond::reflection::optional_field_modifier,
                UserAuthData,
                std::vector< ::HealthCare::Schemas::AppAuthorization>,
                &UserAuthData::Authorizations,
                &s_Authorizations_metadata
            > Authorizations;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::Authorizations>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::LastLogin>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::LatestJson>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::OriginalJson>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::IsPasswordResetRequired>::type fields5;
        private: typedef boost::mpl::push_front<fields5, var::LockoutEndDate>::type fields6;
        private: typedef boost::mpl::push_front<fields6, var::IsLockoutEnabled>::type fields7;
        private: typedef boost::mpl::push_front<fields7, var::PasswordHash>::type fields8;

        public: typedef fields8::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("UserAuthData", "HealthCare.Schemas.UserAuthData",
                bond::reflection::Attributes()
            );
        }
    };
    

    
} // namespace Schemas
} // namespace HealthCare
