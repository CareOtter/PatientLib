//***************************************************
// This code was generated by a tool.  Do not modify.
//***************************************************

#import <Foundation/Foundation.h>
#import "CppBondSerializer.h"
#import <Medication_reflection.h>
#import <MedicationDto.h>
#import <NomenclatureDto.h>
#import <PrescriptionDto.h>

@implementation MedicationDto

- (instancetype)initWithBondObject:(void*)obj {
  if (self = [super init]) {
    ::Medication* castObj = (::Medication*)obj;
    if (!castObj->Id.is_nothing()) self.id =  [[NSString alloc] initWithUTF8String: castObj->Id.value().c_str()];
    if (!castObj->CreatedDate.is_nothing()) self.createdDate =  [[NSDate alloc] initWithTimeIntervalSince1970: castObj->CreatedDate.value()];
    if (!castObj->LastModifiedDate.is_nothing()) self.lastModifiedDate =  [[NSDate alloc] initWithTimeIntervalSince1970: castObj->LastModifiedDate.value()];
    if (!castObj->Name.is_nothing()) self.name =  [[NSString alloc] initWithUTF8String: castObj->Name.value().c_str()];
    if (!castObj->Status.is_nothing()) self.status =  [[NSString alloc] initWithUTF8String: castObj->Status.value().c_str()];
      self.nomenclatureIds = [[NSMutableArray alloc] init];
      for (auto it = castObj->NomenclatureIds.begin(); it != castObj->NomenclatureIds.end(); it++) {
        [self.nomenclatureIds addObject: [[NomenclatureDto alloc] initWithBondObject: &(*it)]];
      }
    if (!castObj->ClinicalDescription.is_nothing()) self.clinicalDescription =  [[NSString alloc] initWithUTF8String: castObj->ClinicalDescription.value().c_str()];
    if (!castObj->ReportingSource.is_nothing()) self.reportingSource =  [[NSString alloc] initWithUTF8String: castObj->ReportingSource.value().c_str()];
    if (!castObj->Comments.is_nothing()) self.comments =  [[NSString alloc] initWithUTF8String: castObj->Comments.value().c_str()];
    if (!castObj->OrderId.is_nothing()) self.orderId =  [[NSString alloc] initWithUTF8String: castObj->OrderId.value().c_str()];
    if (!castObj->CommonName.is_nothing() && castObj->CommonName.value().hasvalue()) self.commonName =  [[NSString alloc] initWithUTF8String: castObj->CommonName.value().value().c_str()];
    if (!castObj->MedicalName.is_nothing() && castObj->MedicalName.value().hasvalue()) self.medicalName =  [[NSString alloc] initWithUTF8String: castObj->MedicalName.value().value().c_str()];
    if (!castObj->Dose.is_nothing() && castObj->Dose.value().hasvalue()) self.dose =  [[NSString alloc] initWithUTF8String: castObj->Dose.value().value().c_str()];
    if (!castObj->Units.is_nothing() && castObj->Units.value().hasvalue()) self.units =  [[NSString alloc] initWithUTF8String: castObj->Units.value().value().c_str()];
    if (!castObj->Strength.is_nothing() && castObj->Strength.value().hasvalue()) self.strength =  [[NSString alloc] initWithUTF8String: castObj->Strength.value().value().c_str()];
    if (!castObj->Form.is_nothing() && castObj->Form.value().hasvalue()) self.form =  [[NSString alloc] initWithUTF8String: castObj->Form.value().value().c_str()];
    if (!castObj->Administered.is_nothing() && castObj->Administered.value().hasvalue()) self.administered =  [[NSDate alloc] initWithTimeIntervalSince1970: castObj->Administered.value().value()];
    if (!castObj->AdministrationStopped.is_nothing() && castObj->AdministrationStopped.value().hasvalue()) self.administrationStopped =  [[NSDate alloc] initWithTimeIntervalSince1970: castObj->AdministrationStopped.value().value()];
    if (!castObj->SignatureLine1.is_nothing() && castObj->SignatureLine1.value().hasvalue()) self.signatureLine1 =  [[NSString alloc] initWithUTF8String: castObj->SignatureLine1.value().value().c_str()];
    if (!castObj->SignatureLine2.is_nothing() && castObj->SignatureLine2.value().hasvalue()) self.signatureLine2 =  [[NSString alloc] initWithUTF8String: castObj->SignatureLine2.value().value().c_str()];
    if (!castObj->Site.is_nothing() && castObj->Site.value().hasvalue()) self.site =  [[NSString alloc] initWithUTF8String: castObj->Site.value().value().c_str()];
    if (!castObj->Route.is_nothing() && castObj->Route.value().hasvalue()) self.route =  [[NSString alloc] initWithUTF8String: castObj->Route.value().value().c_str()];
    if (!castObj->NDCNumber.is_nothing() && castObj->NDCNumber.value().hasvalue()) self.nDCNumber =  [[NSString alloc] initWithUTF8String: castObj->NDCNumber.value().value().c_str()];
    if (!castObj->Prescription.is_nothing() && castObj->Prescription.value().hasvalue()) self.prescription =  [[PrescriptionDto alloc] initWithBondObject: &(castObj->Prescription.value().value())];
    if (!castObj->Frequency.is_nothing() && castObj->Frequency.value().hasvalue()) self.frequency =  [[NSString alloc] initWithUTF8String: castObj->Frequency.value().value().c_str()];
    if (!castObj->Duration.is_nothing() && castObj->Duration.value().hasvalue()) self.duration =  [[NSString alloc] initWithUTF8String: castObj->Duration.value().value().c_str()];
    if (!castObj->Provider.is_nothing() && castObj->Provider.value().hasvalue()) self.provider =  [[NSNumber alloc] initWithLongLong: castObj->Provider.value().value()];
    if (!castObj->ProviderName.is_nothing() && castObj->ProviderName.value().hasvalue()) self.providerName =  [[NSString alloc] initWithUTF8String: castObj->ProviderName.value().value().c_str()];
  }
  return self;
}

- (instancetype) initWithJson: (NSString*)json {
  NSError* error = nil;
  NSData* jsonData = [json dataUsingEncoding:NSUTF8StringEncoding];
  id jsonDictionary = [NSJSONSerialization JSONObjectWithData:jsonData options: kNilOptions error: &error];

  if (error != nil) {
    if (error.code == 3840) return [super init]; // No Data
    return nil;
  }
  if (![jsonDictionary isKindOfClass:[NSDictionary class]]) return nil;
  return [self initWithJsonDictionary: jsonDictionary];
}

- (instancetype) initWithJsonDictionary: (NSDictionary*)dictionary {
  if (self = [super init]) {
    if ([dictionary.allKeys containsObject: @"Id" ] && [dictionary objectForKey: @"Id"] != (id)[NSNull null]) {
      self.id = [dictionary objectForKey: @"Id"];
    }
    if ([dictionary.allKeys containsObject: @"CreatedDate" ] && [dictionary objectForKey: @"CreatedDate"] != (id)[NSNull null]) {
      self.createdDate = [[NSDate alloc] initWithTimeIntervalSince1970: [[dictionary objectForKey: @"CreatedDate"] longValue]];
    }
    if ([dictionary.allKeys containsObject: @"LastModifiedDate" ] && [dictionary objectForKey: @"LastModifiedDate"] != (id)[NSNull null]) {
      self.lastModifiedDate = [[NSDate alloc] initWithTimeIntervalSince1970: [[dictionary objectForKey: @"LastModifiedDate"] longValue]];
    }
    if ([dictionary.allKeys containsObject: @"Name" ] && [dictionary objectForKey: @"Name"] != (id)[NSNull null]) {
      self.name = [dictionary objectForKey: @"Name"];
    }
    if ([dictionary.allKeys containsObject: @"Status" ] && [dictionary objectForKey: @"Status"] != (id)[NSNull null]) {
      self.status = [dictionary objectForKey: @"Status"];
    }
    if ([dictionary.allKeys containsObject: @"NomenclatureIds" ] && [dictionary objectForKey: @"NomenclatureIds"] != (id)[NSNull null]) {
      self.nomenclatureIds = [[NSMutableArray alloc] init];
      for (NSDictionary* item in [dictionary objectForKey: @"NomenclatureIds"]) {
        [self.nomenclatureIds addObject: [[NomenclatureDto alloc] initWithJsonDictionary:item]];
      }
    }
    if ([dictionary.allKeys containsObject: @"ClinicalDescription" ] && [dictionary objectForKey: @"ClinicalDescription"] != (id)[NSNull null]) {
      self.clinicalDescription = [dictionary objectForKey: @"ClinicalDescription"];
    }
    if ([dictionary.allKeys containsObject: @"ReportingSource" ] && [dictionary objectForKey: @"ReportingSource"] != (id)[NSNull null]) {
      self.reportingSource = [dictionary objectForKey: @"ReportingSource"];
    }
    if ([dictionary.allKeys containsObject: @"Comments" ] && [dictionary objectForKey: @"Comments"] != (id)[NSNull null]) {
      self.comments = [dictionary objectForKey: @"Comments"];
    }
    if ([dictionary.allKeys containsObject: @"OrderId" ] && [dictionary objectForKey: @"OrderId"] != (id)[NSNull null]) {
      self.orderId = [dictionary objectForKey: @"OrderId"];
    }
    if ([dictionary.allKeys containsObject: @"CommonName" ] && [dictionary objectForKey: @"CommonName"] != (id)[NSNull null]) {
      self.commonName = [dictionary objectForKey: @"CommonName"];
    }
    if ([dictionary.allKeys containsObject: @"MedicalName" ] && [dictionary objectForKey: @"MedicalName"] != (id)[NSNull null]) {
      self.medicalName = [dictionary objectForKey: @"MedicalName"];
    }
    if ([dictionary.allKeys containsObject: @"Dose" ] && [dictionary objectForKey: @"Dose"] != (id)[NSNull null]) {
      self.dose = [dictionary objectForKey: @"Dose"];
    }
    if ([dictionary.allKeys containsObject: @"Units" ] && [dictionary objectForKey: @"Units"] != (id)[NSNull null]) {
      self.units = [dictionary objectForKey: @"Units"];
    }
    if ([dictionary.allKeys containsObject: @"Strength" ] && [dictionary objectForKey: @"Strength"] != (id)[NSNull null]) {
      self.strength = [dictionary objectForKey: @"Strength"];
    }
    if ([dictionary.allKeys containsObject: @"Form" ] && [dictionary objectForKey: @"Form"] != (id)[NSNull null]) {
      self.form = [dictionary objectForKey: @"Form"];
    }
    if ([dictionary.allKeys containsObject: @"Administered" ] && [dictionary objectForKey: @"Administered"] != (id)[NSNull null]) {
      self.administered = [[NSDate alloc] initWithTimeIntervalSince1970: [[dictionary objectForKey: @"Administered"] longValue]];
    }
    if ([dictionary.allKeys containsObject: @"AdministrationStopped" ] && [dictionary objectForKey: @"AdministrationStopped"] != (id)[NSNull null]) {
      self.administrationStopped = [[NSDate alloc] initWithTimeIntervalSince1970: [[dictionary objectForKey: @"AdministrationStopped"] longValue]];
    }
    if ([dictionary.allKeys containsObject: @"SignatureLine1" ] && [dictionary objectForKey: @"SignatureLine1"] != (id)[NSNull null]) {
      self.signatureLine1 = [dictionary objectForKey: @"SignatureLine1"];
    }
    if ([dictionary.allKeys containsObject: @"SignatureLine2" ] && [dictionary objectForKey: @"SignatureLine2"] != (id)[NSNull null]) {
      self.signatureLine2 = [dictionary objectForKey: @"SignatureLine2"];
    }
    if ([dictionary.allKeys containsObject: @"Site" ] && [dictionary objectForKey: @"Site"] != (id)[NSNull null]) {
      self.site = [dictionary objectForKey: @"Site"];
    }
    if ([dictionary.allKeys containsObject: @"Route" ] && [dictionary objectForKey: @"Route"] != (id)[NSNull null]) {
      self.route = [dictionary objectForKey: @"Route"];
    }
    if ([dictionary.allKeys containsObject: @"NDCNumber" ] && [dictionary objectForKey: @"NDCNumber"] != (id)[NSNull null]) {
      self.nDCNumber = [dictionary objectForKey: @"NDCNumber"];
    }
    if ([dictionary.allKeys containsObject: @"Prescription" ] && [dictionary objectForKey: @"Prescription"] != (id)[NSNull null]) {
      self.prescription = [[PrescriptionDto alloc] initWithJsonDictionary:[dictionary objectForKey: @"Prescription"]];
    }
    if ([dictionary.allKeys containsObject: @"Frequency" ] && [dictionary objectForKey: @"Frequency"] != (id)[NSNull null]) {
      self.frequency = [dictionary objectForKey: @"Frequency"];
    }
    if ([dictionary.allKeys containsObject: @"Duration" ] && [dictionary objectForKey: @"Duration"] != (id)[NSNull null]) {
      self.duration = [dictionary objectForKey: @"Duration"];
    }
    if ([dictionary.allKeys containsObject: @"Provider" ] && [dictionary objectForKey: @"Provider"] != (id)[NSNull null]) {
      self.provider = [dictionary objectForKey: @"Provider"];
    }
    if ([dictionary.allKeys containsObject: @"ProviderName" ] && [dictionary objectForKey: @"ProviderName"] != (id)[NSNull null]) {
      self.providerName = [dictionary objectForKey: @"ProviderName"];
    }
  }
  return self;
}

- (instancetype)initWithByteArray: (uint8_t*)byteArray length:(uint32_t)len {
  ::Medication obj = CppBondSerializer<::Medication>::deserializeFromByteArray(byteArray, len);
  return [self initWithBondObject: &obj];
}

- (void*)toBondObject {
  ::Medication* obj = new Medication();
  if (self.id != nil) obj->Id.set_value() = [self.id cStringUsingEncoding:NSUTF8StringEncoding];
  if (self.createdDate != nil) obj->CreatedDate.set_value() = [self.createdDate timeIntervalSince1970];
  if (self.lastModifiedDate != nil) obj->LastModifiedDate.set_value() = [self.lastModifiedDate timeIntervalSince1970];
  if (self.name != nil) obj->Name.set_value() = [self.name cStringUsingEncoding:NSUTF8StringEncoding];
  if (self.status != nil) obj->Status.set_value() = [self.status cStringUsingEncoding:NSUTF8StringEncoding];
  if (self.nomenclatureIds != nil) {
    for (id item in self.nomenclatureIds) {
      obj->NomenclatureIds.push_back(*(::Nomenclature*)[item toBondObject]);
    }
  }
  if (self.clinicalDescription != nil) obj->ClinicalDescription.set_value() = [self.clinicalDescription cStringUsingEncoding:NSUTF8StringEncoding];
  if (self.reportingSource != nil) obj->ReportingSource.set_value() = [self.reportingSource cStringUsingEncoding:NSUTF8StringEncoding];
  if (self.comments != nil) obj->Comments.set_value() = [self.comments cStringUsingEncoding:NSUTF8StringEncoding];
  if (self.orderId != nil) obj->OrderId.set_value() = [self.orderId cStringUsingEncoding:NSUTF8StringEncoding];
  if (self.commonName != nil) obj->CommonName.set_value().set([self.commonName cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.medicalName != nil) obj->MedicalName.set_value().set([self.medicalName cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.dose != nil) obj->Dose.set_value().set([self.dose cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.units != nil) obj->Units.set_value().set([self.units cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.strength != nil) obj->Strength.set_value().set([self.strength cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.form != nil) obj->Form.set_value().set([self.form cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.administered != nil) obj->Administered.set_value().set([self.administered timeIntervalSince1970]);
  if (self.administrationStopped != nil) obj->AdministrationStopped.set_value().set([self.administrationStopped timeIntervalSince1970]);
  if (self.signatureLine1 != nil) obj->SignatureLine1.set_value().set([self.signatureLine1 cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.signatureLine2 != nil) obj->SignatureLine2.set_value().set([self.signatureLine2 cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.site != nil) obj->Site.set_value().set([self.site cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.route != nil) obj->Route.set_value().set([self.route cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.nDCNumber != nil) obj->NDCNumber.set_value().set([self.nDCNumber cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.prescription != nil) obj->Prescription.set_value().set(*(::Prescription*)[self.prescription toBondObject]);
  if (self.frequency != nil) obj->Frequency.set_value().set([self.frequency cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.duration != nil) obj->Duration.set_value().set([self.duration cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.provider != nil) obj->Provider.set_value().set([self.provider longValue]);
  if (self.providerName != nil) obj->ProviderName.set_value().set([self.providerName cStringUsingEncoding:NSUTF8StringEncoding]);
  return obj;
}

-(const uint8_t*) toByteArray: (uint32_t*)resultLen {
  auto obj = (::Medication*)[self toBondObject];
  return CppBondSerializer<::Medication>::serializeToByteArray(*obj, resultLen);
}

@end
