
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.3.0.5
//   File : Problem_reflection.h
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#pragma once

#include "Problem_types.h"
#include <bond/core/reflection.h>
#include "BaseClasses_reflection.h"

namespace HealthCare
{
namespace Schemas
{
    //
    // RelatedOrder
    //
    struct RelatedOrder::Schema
    {
        typedef ::HealthCare::Schemas::BaseItem base;

        static const bond::Metadata metadata;
        

        public: struct var
        {};

        private: typedef boost::mpl::list<> fields0;
        

        public: typedef fields0::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("RelatedOrder", "HealthCare.Schemas.RelatedOrder",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // RelatedMedication
    //
    struct RelatedMedication::Schema
    {
        typedef ::HealthCare::Schemas::BaseItem base;

        static const bond::Metadata metadata;
        

        public: struct var
        {};

        private: typedef boost::mpl::list<> fields0;
        

        public: typedef fields0::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("RelatedMedication", "HealthCare.Schemas.RelatedMedication",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // Problem
    //
    struct Problem::Schema
    {
        typedef ::HealthCare::Schemas::BaseClinicalItem base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Onset_metadata;
        private: static const bond::Metadata s_Resolved_metadata;
        private: static const bond::Metadata s_RelatedMedications_metadata;
        private: static const bond::Metadata s_ProblemStatus_metadata;
        private: static const bond::Metadata s_ProblemType_metadata;
        private: static const bond::Metadata s_ManagingProviderName_metadata;
        private: static const bond::Metadata s_LastAssessed_metadata;
        private: static const bond::Metadata s_RelatedOrders_metadata;

        public: struct var
        {
            // Onset
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                Problem,
                bond::maybe<bond::nullable<int64_t> >,
                &Problem::Onset,
                &s_Onset_metadata
            > Onset;
        
            // Resolved
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                Problem,
                bond::maybe<bond::nullable<int64_t> >,
                &Problem::Resolved,
                &s_Resolved_metadata
            > Resolved;
        
            // RelatedMedications
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                Problem,
                std::vector< ::HealthCare::Schemas::RelatedMedication>,
                &Problem::RelatedMedications,
                &s_RelatedMedications_metadata
            > RelatedMedications;
        
            // ProblemStatus
            typedef bond::reflection::FieldTemplate<
                3,
                bond::reflection::optional_field_modifier,
                Problem,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::ProblemStatus> >,
                &Problem::ProblemStatus,
                &s_ProblemStatus_metadata
            > ProblemStatus;
        
            // ProblemType
            typedef bond::reflection::FieldTemplate<
                4,
                bond::reflection::optional_field_modifier,
                Problem,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::ProblemType> >,
                &Problem::ProblemType,
                &s_ProblemType_metadata
            > ProblemType;
        
            // ManagingProviderName
            typedef bond::reflection::FieldTemplate<
                5,
                bond::reflection::optional_field_modifier,
                Problem,
                bond::maybe<bond::nullable<std::string> >,
                &Problem::ManagingProviderName,
                &s_ManagingProviderName_metadata
            > ManagingProviderName;
        
            // LastAssessed
            typedef bond::reflection::FieldTemplate<
                6,
                bond::reflection::optional_field_modifier,
                Problem,
                bond::maybe<bond::nullable<int64_t> >,
                &Problem::LastAssessed,
                &s_LastAssessed_metadata
            > LastAssessed;
        
            // RelatedOrders
            typedef bond::reflection::FieldTemplate<
                7,
                bond::reflection::optional_field_modifier,
                Problem,
                std::vector< ::HealthCare::Schemas::RelatedOrder>,
                &Problem::RelatedOrders,
                &s_RelatedOrders_metadata
            > RelatedOrders;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::RelatedOrders>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::LastAssessed>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::ManagingProviderName>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::ProblemType>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::ProblemStatus>::type fields5;
        private: typedef boost::mpl::push_front<fields5, var::RelatedMedications>::type fields6;
        private: typedef boost::mpl::push_front<fields6, var::Resolved>::type fields7;
        private: typedef boost::mpl::push_front<fields7, var::Onset>::type fields8;

        public: typedef fields8::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("Problem", "HealthCare.Schemas.Problem",
                bond::reflection::Attributes()
            );
        }
    };
    

    
} // namespace Schemas
} // namespace HealthCare
