//***************************************************
// This code was generated by a tool.  Do not modify.
//***************************************************

#import <Foundation/Foundation.h>
#import "CppBondSerializer.h"
#import <ImageResource_reflection.h>
#import <ImageResourceDto.h>

@implementation ImageResourceDto

- (instancetype)initWithBondObject:(void*)obj {
  if (self = [super init]) {
    ::ImageResource* castObj = (::ImageResource*)obj;
    if (!castObj->Id.is_nothing()) self.id =  [[NSString alloc] initWithUTF8String: castObj->Id.value().c_str()];
    if (!castObj->CreatedDate.is_nothing()) self.createdDate =  [[NSDate alloc] initWithTimeIntervalSince1970: castObj->CreatedDate.value()];
    if (!castObj->LastModifiedDate.is_nothing()) self.lastModifiedDate =  [[NSDate alloc] initWithTimeIntervalSince1970: castObj->LastModifiedDate.value()];
    if (!castObj->ResourceType.is_nothing() && castObj->ResourceType.value().hasvalue()) self.resourceType =  [[NSString alloc] initWithUTF8String: castObj->ResourceType.value().value().c_str()];
    if (!castObj->ResourceExtension.is_nothing() && castObj->ResourceExtension.value().hasvalue()) self.resourceExtension =  [[NSString alloc] initWithUTF8String: castObj->ResourceExtension.value().value().c_str()];
    if (!castObj->ResourceId.is_nothing() && castObj->ResourceId.value().hasvalue()) self.resourceId =  [[NSString alloc] initWithUTF8String: castObj->ResourceId.value().value().c_str()];
  }
  return self;
}

- (instancetype) initWithJson: (NSString*)json {
  NSError* error = nil;
  NSData* jsonData = [json dataUsingEncoding:NSUTF8StringEncoding];
  id jsonDictionary = [NSJSONSerialization JSONObjectWithData:jsonData options: kNilOptions error: &error];

  if (error != nil) {
    if (error.code == 3840) return [super init]; // No Data
    return nil;
  }
  if (![jsonDictionary isKindOfClass:[NSDictionary class]]) return nil;
  return [self initWithJsonDictionary: jsonDictionary];
}

- (instancetype) initWithJsonDictionary: (NSDictionary*)dictionary {
  if (self = [super init]) {
    if ([dictionary.allKeys containsObject: @"Id" ] && [dictionary objectForKey: @"Id"] != (id)[NSNull null]) {
      self.id = [dictionary objectForKey: @"Id"];
    }
    if ([dictionary.allKeys containsObject: @"CreatedDate" ] && [dictionary objectForKey: @"CreatedDate"] != (id)[NSNull null]) {
      self.createdDate = [[NSDate alloc] initWithTimeIntervalSince1970: [[dictionary objectForKey: @"CreatedDate"] longValue]];
    }
    if ([dictionary.allKeys containsObject: @"LastModifiedDate" ] && [dictionary objectForKey: @"LastModifiedDate"] != (id)[NSNull null]) {
      self.lastModifiedDate = [[NSDate alloc] initWithTimeIntervalSince1970: [[dictionary objectForKey: @"LastModifiedDate"] longValue]];
    }
    if ([dictionary.allKeys containsObject: @"ResourceType" ] && [dictionary objectForKey: @"ResourceType"] != (id)[NSNull null]) {
      self.resourceType = [dictionary objectForKey: @"ResourceType"];
    }
    if ([dictionary.allKeys containsObject: @"ResourceExtension" ] && [dictionary objectForKey: @"ResourceExtension"] != (id)[NSNull null]) {
      self.resourceExtension = [dictionary objectForKey: @"ResourceExtension"];
    }
    if ([dictionary.allKeys containsObject: @"ResourceId" ] && [dictionary objectForKey: @"ResourceId"] != (id)[NSNull null]) {
      self.resourceId = [dictionary objectForKey: @"ResourceId"];
    }
  }
  return self;
}

- (instancetype)initWithByteArray: (uint8_t*)byteArray length:(uint32_t)len {
  ::ImageResource obj = CppBondSerializer<::ImageResource>::deserializeFromByteArray(byteArray, len);
  return [self initWithBondObject: &obj];
}

- (void*)toBondObject {
  ::ImageResource* obj = new ImageResource();
  if (self.id != nil) obj->Id.set_value() = [self.id cStringUsingEncoding:NSUTF8StringEncoding];
  if (self.createdDate != nil) obj->CreatedDate.set_value() = [self.createdDate timeIntervalSince1970];
  if (self.lastModifiedDate != nil) obj->LastModifiedDate.set_value() = [self.lastModifiedDate timeIntervalSince1970];
  if (self.resourceType != nil) obj->ResourceType.set_value().set([self.resourceType cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.resourceExtension != nil) obj->ResourceExtension.set_value().set([self.resourceExtension cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.resourceId != nil) obj->ResourceId.set_value().set([self.resourceId cStringUsingEncoding:NSUTF8StringEncoding]);
  return obj;
}

-(const uint8_t*) toByteArray: (uint32_t*)resultLen {
  auto obj = (::ImageResource*)[self toBondObject];
  return CppBondSerializer<::ImageResource>::serializeToByteArray(*obj, resultLen);
}

@end
