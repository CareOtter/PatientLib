
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.3.0.5
//   File : BaseObservationSet_reflection.h
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#pragma once

#include "BaseObservationSet_types.h"
#include <bond/core/reflection.h>
#include "BaseClasses_reflection.h"
#include "BaseObservation_reflection.h"

namespace HealthCare
{
namespace Schemas
{
    //
    // ObsCatalogSetItem
    //
    struct ObsCatalogSetItem::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_ObsName_metadata;
        private: static const bond::Metadata s_DisplaySequence_metadata;
        private: static const bond::Metadata s_IsActive_metadata;
        private: static const bond::Metadata s_PWItemType_metadata;
        private: static const bond::Metadata s_PWNewParagraph_metadata;
        private: static const bond::Metadata s_PWStatementDesc_metadata;
        private: static const bond::Metadata s_ObsCatalogSetName_metadata;
        private: static const bond::Metadata s_ItemLineNo_metadata;
        private: static const bond::Metadata s_ItemPosition_metadata;
        private: static const bond::Metadata s_ItemSeparator_metadata;
        private: static const bond::Metadata s_CellColumnIndex_metadata;
        private: static const bond::Metadata s_CellRowIndex_metadata;
        private: static const bond::Metadata s_CellRowSpan_metadata;
        private: static const bond::Metadata s_CellColumnSpan_metadata;
        private: static const bond::Metadata s_ResultGridPosition_metadata;
        private: static const bond::Metadata s_DisplayRowLabel_metadata;
        private: static const bond::Metadata s_ObservationDescription_metadata;

        public: struct var
        {
            // ObsName
            typedef bond::reflection::FieldTemplate<
                10,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable<std::string> >,
                &ObsCatalogSetItem::ObsName,
                &s_ObsName_metadata
            > ObsName;
        
            // DisplaySequence
            typedef bond::reflection::FieldTemplate<
                11,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable<int16_t> >,
                &ObsCatalogSetItem::DisplaySequence,
                &s_DisplaySequence_metadata
            > DisplaySequence;
        
            // IsActive
            typedef bond::reflection::FieldTemplate<
                12,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable<int16_t> >,
                &ObsCatalogSetItem::IsActive,
                &s_IsActive_metadata
            > IsActive;
        
            // PWItemType
            typedef bond::reflection::FieldTemplate<
                13,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable<double> >,
                &ObsCatalogSetItem::PWItemType,
                &s_PWItemType_metadata
            > PWItemType;
        
            // PWNewParagraph
            typedef bond::reflection::FieldTemplate<
                14,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable<int16_t> >,
                &ObsCatalogSetItem::PWNewParagraph,
                &s_PWNewParagraph_metadata
            > PWNewParagraph;
        
            // PWStatementDesc
            typedef bond::reflection::FieldTemplate<
                15,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable<std::string> >,
                &ObsCatalogSetItem::PWStatementDesc,
                &s_PWStatementDesc_metadata
            > PWStatementDesc;
        
            // ObsCatalogSetName
            typedef bond::reflection::FieldTemplate<
                16,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable<std::string> >,
                &ObsCatalogSetItem::ObsCatalogSetName,
                &s_ObsCatalogSetName_metadata
            > ObsCatalogSetName;
        
            // ItemLineNo
            typedef bond::reflection::FieldTemplate<
                17,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable<int16_t> >,
                &ObsCatalogSetItem::ItemLineNo,
                &s_ItemLineNo_metadata
            > ItemLineNo;
        
            // ItemPosition
            typedef bond::reflection::FieldTemplate<
                18,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable<int16_t> >,
                &ObsCatalogSetItem::ItemPosition,
                &s_ItemPosition_metadata
            > ItemPosition;
        
            // ItemSeparator
            typedef bond::reflection::FieldTemplate<
                19,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable<std::string> >,
                &ObsCatalogSetItem::ItemSeparator,
                &s_ItemSeparator_metadata
            > ItemSeparator;
        
            // CellColumnIndex
            typedef bond::reflection::FieldTemplate<
                20,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable<int16_t> >,
                &ObsCatalogSetItem::CellColumnIndex,
                &s_CellColumnIndex_metadata
            > CellColumnIndex;
        
            // CellRowIndex
            typedef bond::reflection::FieldTemplate<
                21,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable<int16_t> >,
                &ObsCatalogSetItem::CellRowIndex,
                &s_CellRowIndex_metadata
            > CellRowIndex;
        
            // CellRowSpan
            typedef bond::reflection::FieldTemplate<
                22,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable<int16_t> >,
                &ObsCatalogSetItem::CellRowSpan,
                &s_CellRowSpan_metadata
            > CellRowSpan;
        
            // CellColumnSpan
            typedef bond::reflection::FieldTemplate<
                23,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable<int16_t> >,
                &ObsCatalogSetItem::CellColumnSpan,
                &s_CellColumnSpan_metadata
            > CellColumnSpan;
        
            // ResultGridPosition
            typedef bond::reflection::FieldTemplate<
                24,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable<double> >,
                &ObsCatalogSetItem::ResultGridPosition,
                &s_ResultGridPosition_metadata
            > ResultGridPosition;
        
            // DisplayRowLabel
            typedef bond::reflection::FieldTemplate<
                25,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable<std::string> >,
                &ObsCatalogSetItem::DisplayRowLabel,
                &s_DisplayRowLabel_metadata
            > DisplayRowLabel;
        
            // ObservationDescription
            typedef bond::reflection::FieldTemplate<
                26,
                bond::reflection::optional_field_modifier,
                ObsCatalogSetItem,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::ObservationDescription> >,
                &ObsCatalogSetItem::ObservationDescription,
                &s_ObservationDescription_metadata
            > ObservationDescription;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::ObservationDescription>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::DisplayRowLabel>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::ResultGridPosition>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::CellColumnSpan>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::CellRowSpan>::type fields5;
        private: typedef boost::mpl::push_front<fields5, var::CellRowIndex>::type fields6;
        private: typedef boost::mpl::push_front<fields6, var::CellColumnIndex>::type fields7;
        private: typedef boost::mpl::push_front<fields7, var::ItemSeparator>::type fields8;
        private: typedef boost::mpl::push_front<fields8, var::ItemPosition>::type fields9;
        private: typedef boost::mpl::push_front<fields9, var::ItemLineNo>::type fields10;
        private: typedef boost::mpl::push_front<fields10, var::ObsCatalogSetName>::type fields11;
        private: typedef boost::mpl::push_front<fields11, var::PWStatementDesc>::type fields12;
        private: typedef boost::mpl::push_front<fields12, var::PWNewParagraph>::type fields13;
        private: typedef boost::mpl::push_front<fields13, var::PWItemType>::type fields14;
        private: typedef boost::mpl::push_front<fields14, var::IsActive>::type fields15;
        private: typedef boost::mpl::push_front<fields15, var::DisplaySequence>::type fields16;
        private: typedef boost::mpl::push_front<fields16, var::ObsName>::type fields17;

        public: typedef fields17::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("ObsCatalogSetItem", "HealthCare.Schemas.ObsCatalogSetItem",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // ObservationSetDescription
    //
    struct ObservationSetDescription::Schema
    {
        typedef ::HealthCare::Schemas::BaseEntity base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Name_metadata;
        private: static const bond::Metadata s_Description_metadata;
        private: static const bond::Metadata s_EffectiveDate_metadata;
        private: static const bond::Metadata s_ExpiryDate_metadata;
        private: static const bond::Metadata s_DisplayName_metadata;
        private: static const bond::Metadata s_IsGrouped_metadata;
        private: static const bond::Metadata s_ObsSetType_metadata;
        private: static const bond::Metadata s_IsBorderOn_metadata;
        private: static const bond::Metadata s_IsDisplayRTFAsGrid_metadata;
        private: static const bond::Metadata s_ObservationResultGridType_metadata;
        private: static const bond::Metadata s_IsRTFBullet_metadata;
        private: static const bond::Metadata s_IsRTFConcatenate_metadata;
        private: static const bond::Metadata s_ObsSetItems_metadata;

        public: struct var
        {
            // Name
            typedef bond::reflection::FieldTemplate<
                10,
                bond::reflection::optional_field_modifier,
                ObservationSetDescription,
                bond::maybe<bond::nullable<std::string> >,
                &ObservationSetDescription::Name,
                &s_Name_metadata
            > Name;
        
            // Description
            typedef bond::reflection::FieldTemplate<
                11,
                bond::reflection::optional_field_modifier,
                ObservationSetDescription,
                bond::maybe<bond::nullable<std::string> >,
                &ObservationSetDescription::Description,
                &s_Description_metadata
            > Description;
        
            // EffectiveDate
            typedef bond::reflection::FieldTemplate<
                12,
                bond::reflection::optional_field_modifier,
                ObservationSetDescription,
                bond::maybe<bond::nullable<int64_t> >,
                &ObservationSetDescription::EffectiveDate,
                &s_EffectiveDate_metadata
            > EffectiveDate;
        
            // ExpiryDate
            typedef bond::reflection::FieldTemplate<
                13,
                bond::reflection::optional_field_modifier,
                ObservationSetDescription,
                bond::maybe<bond::nullable<int64_t> >,
                &ObservationSetDescription::ExpiryDate,
                &s_ExpiryDate_metadata
            > ExpiryDate;
        
            // DisplayName
            typedef bond::reflection::FieldTemplate<
                14,
                bond::reflection::optional_field_modifier,
                ObservationSetDescription,
                bond::maybe<bond::nullable<std::string> >,
                &ObservationSetDescription::DisplayName,
                &s_DisplayName_metadata
            > DisplayName;
        
            // IsGrouped
            typedef bond::reflection::FieldTemplate<
                15,
                bond::reflection::optional_field_modifier,
                ObservationSetDescription,
                bond::maybe<bond::nullable<int16_t> >,
                &ObservationSetDescription::IsGrouped,
                &s_IsGrouped_metadata
            > IsGrouped;
        
            // ObsSetType
            typedef bond::reflection::FieldTemplate<
                16,
                bond::reflection::optional_field_modifier,
                ObservationSetDescription,
                bond::maybe<bond::nullable<std::string> >,
                &ObservationSetDescription::ObsSetType,
                &s_ObsSetType_metadata
            > ObsSetType;
        
            // IsBorderOn
            typedef bond::reflection::FieldTemplate<
                17,
                bond::reflection::optional_field_modifier,
                ObservationSetDescription,
                bond::maybe<bond::nullable<int16_t> >,
                &ObservationSetDescription::IsBorderOn,
                &s_IsBorderOn_metadata
            > IsBorderOn;
        
            // IsDisplayRTFAsGrid
            typedef bond::reflection::FieldTemplate<
                18,
                bond::reflection::optional_field_modifier,
                ObservationSetDescription,
                bond::maybe<bond::nullable<int16_t> >,
                &ObservationSetDescription::IsDisplayRTFAsGrid,
                &s_IsDisplayRTFAsGrid_metadata
            > IsDisplayRTFAsGrid;
        
            // ObservationResultGridType
            typedef bond::reflection::FieldTemplate<
                19,
                bond::reflection::optional_field_modifier,
                ObservationSetDescription,
                bond::maybe<bond::nullable<int16_t> >,
                &ObservationSetDescription::ObservationResultGridType,
                &s_ObservationResultGridType_metadata
            > ObservationResultGridType;
        
            // IsRTFBullet
            typedef bond::reflection::FieldTemplate<
                20,
                bond::reflection::optional_field_modifier,
                ObservationSetDescription,
                bond::maybe<bond::nullable<int16_t> >,
                &ObservationSetDescription::IsRTFBullet,
                &s_IsRTFBullet_metadata
            > IsRTFBullet;
        
            // IsRTFConcatenate
            typedef bond::reflection::FieldTemplate<
                21,
                bond::reflection::optional_field_modifier,
                ObservationSetDescription,
                bond::maybe<bond::nullable<int16_t> >,
                &ObservationSetDescription::IsRTFConcatenate,
                &s_IsRTFConcatenate_metadata
            > IsRTFConcatenate;
        
            // ObsSetItems
            typedef bond::reflection::FieldTemplate<
                22,
                bond::reflection::optional_field_modifier,
                ObservationSetDescription,
                bond::maybe<std::vector< ::HealthCare::Schemas::ObsCatalogSetItem> >,
                &ObservationSetDescription::ObsSetItems,
                &s_ObsSetItems_metadata
            > ObsSetItems;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::ObsSetItems>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::IsRTFConcatenate>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::IsRTFBullet>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::ObservationResultGridType>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::IsDisplayRTFAsGrid>::type fields5;
        private: typedef boost::mpl::push_front<fields5, var::IsBorderOn>::type fields6;
        private: typedef boost::mpl::push_front<fields6, var::ObsSetType>::type fields7;
        private: typedef boost::mpl::push_front<fields7, var::IsGrouped>::type fields8;
        private: typedef boost::mpl::push_front<fields8, var::DisplayName>::type fields9;
        private: typedef boost::mpl::push_front<fields9, var::ExpiryDate>::type fields10;
        private: typedef boost::mpl::push_front<fields10, var::EffectiveDate>::type fields11;
        private: typedef boost::mpl::push_front<fields11, var::Description>::type fields12;
        private: typedef boost::mpl::push_front<fields12, var::Name>::type fields13;

        public: typedef fields13::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("ObservationSetDescription", "HealthCare.Schemas.ObservationSetDescription",
                bond::reflection::Attributes()
            );
        }
    };
    

    
} // namespace Schemas
} // namespace HealthCare
