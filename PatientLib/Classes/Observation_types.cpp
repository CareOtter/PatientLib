
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.3.0.5
//   File : Observation_types.cpp
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#include "Observation_reflection.h"
#include <bond/core/exception.h>

namespace HealthCare
{
namespace Schemas
{
    
    namespace _bond_enumerators
    {
    namespace NormalityFlag
    {
        const
        std::map<std::string, enum NormalityFlag> _name_to_value_NormalityFlag =
            boost::assign::map_list_of<std::string, enum NormalityFlag>
                ("Normal", Normal)
                ("Abnormal", Abnormal)
                ("High", High)
                ("Low", Low)
                ("AbnormalHigh", AbnormalHigh)
                ("AbnormalLow", AbnormalLow);

        const
        std::map<enum NormalityFlag, std::string> _value_to_name_NormalityFlag =
            bond::reverse_map(_name_to_value_NormalityFlag);

        const std::string& ToString(enum NormalityFlag value)
        {
            std::map<enum NormalityFlag, std::string>::const_iterator it =
                GetValueToNameMap(value).find(value);

            if (GetValueToNameMap(value).end() == it)
                bond::InvalidEnumValueException(value, "NormalityFlag");

            return it->second;
        }

        void FromString(const std::string& name, enum NormalityFlag& value)
        {
            std::map<std::string, enum NormalityFlag>::const_iterator it =
                _name_to_value_NormalityFlag.find(name);

            if (_name_to_value_NormalityFlag.end() == it)
                bond::InvalidEnumValueException(name.c_str(), "NormalityFlag");

            value = it->second;
        }

    } // namespace NormalityFlag
    } // namespace _bond_enumerators

    
    const bond::Metadata Observation::Schema::metadata
        = Observation::Schema::GetMetadata();
    
    const bond::Metadata Observation::Schema::s_ObservationDate_metadata
        = bond::reflection::MetadataInit(bond::nothing, "ObservationDate");
    
    const bond::Metadata Observation::Schema::s_Measurements_metadata
        = bond::reflection::MetadataInit(bond::nothing, "Measurements");
    
    const bond::Metadata Observation::Schema::s_ObservationDescriptionId_metadata
        = bond::reflection::MetadataInit(bond::nothing, "ObservationDescriptionId");
    
    const bond::Metadata Observation::Schema::s_ObservationGroupName_metadata
        = bond::reflection::MetadataInit(bond::nothing, "ObservationGroupName");

    
} // namespace Schemas
} // namespace HealthCare
