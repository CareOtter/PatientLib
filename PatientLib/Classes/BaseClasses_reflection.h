
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.3.0.5
//   File : BaseClasses_reflection.h
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#pragma once

#include "BaseClasses_types.h"
#include <bond/core/reflection.h>

namespace HealthCare
{
namespace Schemas
{
    //
    // BaseItem
    //
    struct BaseItem::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Id_metadata;
        private: static const bond::Metadata s_CreatedDate_metadata;
        private: static const bond::Metadata s_LastModifiedDate_metadata;

        public: struct var
        {
            // Id
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                BaseItem,
                bond::maybe<std::string>,
                &BaseItem::Id,
                &s_Id_metadata
            > Id;
        
            // CreatedDate
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                BaseItem,
                bond::maybe<int64_t>,
                &BaseItem::CreatedDate,
                &s_CreatedDate_metadata
            > CreatedDate;
        
            // LastModifiedDate
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                BaseItem,
                bond::maybe<int64_t>,
                &BaseItem::LastModifiedDate,
                &s_LastModifiedDate_metadata
            > LastModifiedDate;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::LastModifiedDate>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::CreatedDate>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::Id>::type fields3;

        public: typedef fields3::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("BaseItem", "HealthCare.Schemas.BaseItem",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // BaseEntity
    //
    struct BaseEntity::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Id_metadata;
        private: static const bond::Metadata s_CreatedDate_metadata;
        private: static const bond::Metadata s_LastModifiedDate_metadata;

        public: struct var
        {
            // Id
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                BaseEntity,
                int64_t,
                &BaseEntity::Id,
                &s_Id_metadata
            > Id;
        
            // CreatedDate
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                BaseEntity,
                bond::maybe<int64_t>,
                &BaseEntity::CreatedDate,
                &s_CreatedDate_metadata
            > CreatedDate;
        
            // LastModifiedDate
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                BaseEntity,
                bond::maybe<int64_t>,
                &BaseEntity::LastModifiedDate,
                &s_LastModifiedDate_metadata
            > LastModifiedDate;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::LastModifiedDate>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::CreatedDate>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::Id>::type fields3;

        public: typedef fields3::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("BaseEntity", "HealthCare.Schemas.BaseEntity",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // Coordinates
    //
    struct Coordinates::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Longitude_metadata;
        private: static const bond::Metadata s_Latitude_metadata;

        public: struct var
        {
            // Longitude
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                Coordinates,
                bond::maybe<bond::nullable<double> >,
                &Coordinates::Longitude,
                &s_Longitude_metadata
            > Longitude;
        
            // Latitude
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                Coordinates,
                bond::maybe<bond::nullable<double> >,
                &Coordinates::Latitude,
                &s_Latitude_metadata
            > Latitude;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::Latitude>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::Longitude>::type fields2;

        public: typedef fields2::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("Coordinates", "HealthCare.Schemas.Coordinates",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // LocatableBaseEntity
    //
    struct LocatableBaseEntity::Schema
    {
        typedef ::HealthCare::Schemas::BaseEntity base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Coordinates_metadata;

        public: struct var
        {
            // Coordinates
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                LocatableBaseEntity,
                bond::nullable< ::HealthCare::Schemas::Coordinates>,
                &LocatableBaseEntity::Coordinates,
                &s_Coordinates_metadata
            > Coordinates;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::Coordinates>::type fields1;

        public: typedef fields1::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("LocatableBaseEntity", "HealthCare.Schemas.LocatableBaseEntity",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // BaseItemCollection
    //
    template <typename T>
    struct BaseItemCollection<T>::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Collection_metadata;

        public: struct var
        {
            // Collection
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                BaseItemCollection<T>,
                std::vector<T>,
                &BaseItemCollection<T>::Collection,
                &s_Collection_metadata
            > Collection;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef typename boost::mpl::push_front<fields0, typename var::Collection>::type fields1;

        public: typedef typename fields1::type fields;
        
        Schema()
        {
            // Force instantiation of template statics
            (void)metadata;
            (void)s_Collection_metadata;
        }
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit<boost::mpl::list<T> >("BaseItemCollection", "HealthCare.Schemas.BaseItemCollection",
                bond::reflection::Attributes()
            );
        }
    };
    
    template <typename T>
    const bond::Metadata BaseItemCollection<T>::Schema::metadata
        = BaseItemCollection<T>::Schema::GetMetadata();
    
    template <typename T>
    const bond::Metadata BaseItemCollection<T>::Schema::s_Collection_metadata
        = bond::reflection::MetadataInit("Collection");

    //
    // Nomenclature
    //
    struct Nomenclature::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Type_metadata;
        private: static const bond::Metadata s_Code_metadata;
        private: static const bond::Metadata s_Name_metadata;

        public: struct var
        {
            // Type
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                Nomenclature,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::NomenclatureType> >,
                &Nomenclature::Type,
                &s_Type_metadata
            > Type;
        
            // Code
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                Nomenclature,
                bond::maybe<bond::nullable<std::string> >,
                &Nomenclature::Code,
                &s_Code_metadata
            > Code;
        
            // Name
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                Nomenclature,
                bond::maybe<bond::nullable<std::string> >,
                &Nomenclature::Name,
                &s_Name_metadata
            > Name;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::Name>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::Code>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::Type>::type fields3;

        public: typedef fields3::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("Nomenclature", "HealthCare.Schemas.Nomenclature",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // BaseClinicalItem
    //
    struct BaseClinicalItem::Schema
    {
        typedef ::HealthCare::Schemas::BaseItem base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Name_metadata;
        private: static const bond::Metadata s_Status_metadata;
        private: static const bond::Metadata s_NomenclatureIds_metadata;
        private: static const bond::Metadata s_ClinicalDescription_metadata;
        private: static const bond::Metadata s_ReportingSource_metadata;
        private: static const bond::Metadata s_Comments_metadata;

        public: struct var
        {
            // Name
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                BaseClinicalItem,
                bond::maybe<std::string>,
                &BaseClinicalItem::Name,
                &s_Name_metadata
            > Name;
        
            // Status
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                BaseClinicalItem,
                bond::maybe<std::string>,
                &BaseClinicalItem::Status,
                &s_Status_metadata
            > Status;
        
            // NomenclatureIds
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                BaseClinicalItem,
                std::vector< ::HealthCare::Schemas::Nomenclature>,
                &BaseClinicalItem::NomenclatureIds,
                &s_NomenclatureIds_metadata
            > NomenclatureIds;
        
            // ClinicalDescription
            typedef bond::reflection::FieldTemplate<
                3,
                bond::reflection::optional_field_modifier,
                BaseClinicalItem,
                bond::maybe<std::string>,
                &BaseClinicalItem::ClinicalDescription,
                &s_ClinicalDescription_metadata
            > ClinicalDescription;
        
            // ReportingSource
            typedef bond::reflection::FieldTemplate<
                4,
                bond::reflection::optional_field_modifier,
                BaseClinicalItem,
                bond::maybe<std::string>,
                &BaseClinicalItem::ReportingSource,
                &s_ReportingSource_metadata
            > ReportingSource;
        
            // Comments
            typedef bond::reflection::FieldTemplate<
                5,
                bond::reflection::optional_field_modifier,
                BaseClinicalItem,
                bond::maybe<std::string>,
                &BaseClinicalItem::Comments,
                &s_Comments_metadata
            > Comments;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::Comments>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::ReportingSource>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::ClinicalDescription>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::NomenclatureIds>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::Status>::type fields5;
        private: typedef boost::mpl::push_front<fields5, var::Name>::type fields6;

        public: typedef fields6::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("BaseClinicalItem", "HealthCare.Schemas.BaseClinicalItem",
                bond::reflection::Attributes()
            );
        }
    };
    

    
} // namespace Schemas
} // namespace HealthCare
