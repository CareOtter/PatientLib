
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.3.0.5
//   File : SurgicalProcedure_reflection.h
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#pragma once

#include "SurgicalProcedure_types.h"
#include <bond/core/reflection.h>
#include "BaseClasses_reflection.h"

namespace HealthCare
{
namespace Schemas
{
    //
    // SurgicalProcedure
    //
    struct SurgicalProcedure::Schema
    {
        typedef ::HealthCare::Schemas::BaseClinicalItem base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_ProcedureDate_metadata;

        public: struct var
        {
            // ProcedureDate
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                SurgicalProcedure,
                bond::maybe<bond::nullable<int64_t> >,
                &SurgicalProcedure::ProcedureDate,
                &s_ProcedureDate_metadata
            > ProcedureDate;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::ProcedureDate>::type fields1;

        public: typedef fields1::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("SurgicalProcedure", "HealthCare.Schemas.SurgicalProcedure",
                bond::reflection::Attributes()
            );
        }
    };
    

    
} // namespace Schemas
} // namespace HealthCare
