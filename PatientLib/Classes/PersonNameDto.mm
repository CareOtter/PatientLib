//***************************************************
// This code was generated by a tool.  Do not modify.
//***************************************************

#import <Foundation/Foundation.h>
#import "CppBondSerializer.h"
#import <BasePerson_reflection.h>
#import <PersonNameDto.h>

@implementation PersonNameDto

- (instancetype)initWithBondObject:(void*)obj {
  if (self = [super init]) {
    ::PersonName* castObj = (::PersonName*)obj;
    if (!castObj->FirstName.is_nothing() && castObj->FirstName.value().hasvalue()) self.firstName =  [[NSString alloc] initWithUTF8String: castObj->FirstName.value().value().c_str()];
    if (!castObj->LastName.is_nothing() && castObj->LastName.value().hasvalue()) self.lastName =  [[NSString alloc] initWithUTF8String: castObj->LastName.value().value().c_str()];
    if (!castObj->MiddleName.is_nothing() && castObj->MiddleName.value().hasvalue()) self.middleName =  [[NSString alloc] initWithUTF8String: castObj->MiddleName.value().value().c_str()];
    if (!castObj->Suffix.is_nothing() && castObj->Suffix.value().hasvalue()) self.suffix =  [[NSString alloc] initWithUTF8String: castObj->Suffix.value().value().c_str()];
    if (!castObj->Credentials.is_nothing() && castObj->Credentials.value().hasvalue()) self.credentials =  [[NSString alloc] initWithUTF8String: castObj->Credentials.value().value().c_str()];
    if (!castObj->Salutation.is_nothing() && castObj->Salutation.value().hasvalue()) self.salutation =  [[NSString alloc] initWithUTF8String: castObj->Salutation.value().value().c_str()];
    if (!castObj->Nickname.is_nothing() && castObj->Nickname.value().hasvalue()) self.nickname =  [[NSString alloc] initWithUTF8String: castObj->Nickname.value().value().c_str()];
  }
  return self;
}

- (instancetype) initWithJson: (NSString*)json {
  NSError* error = nil;
  NSData* jsonData = [json dataUsingEncoding:NSUTF8StringEncoding];
  id jsonDictionary = [NSJSONSerialization JSONObjectWithData:jsonData options: kNilOptions error: &error];

  if (error != nil) {
    if (error.code == 3840) return [super init]; // No Data
    return nil;
  }
  if (![jsonDictionary isKindOfClass:[NSDictionary class]]) return nil;
  return [self initWithJsonDictionary: jsonDictionary];
}

- (instancetype) initWithJsonDictionary: (NSDictionary*)dictionary {
  if (self = [super init]) {
    if ([dictionary.allKeys containsObject: @"FirstName" ] && [dictionary objectForKey: @"FirstName"] != (id)[NSNull null]) {
      self.firstName = [dictionary objectForKey: @"FirstName"];
    }
    if ([dictionary.allKeys containsObject: @"LastName" ] && [dictionary objectForKey: @"LastName"] != (id)[NSNull null]) {
      self.lastName = [dictionary objectForKey: @"LastName"];
    }
    if ([dictionary.allKeys containsObject: @"MiddleName" ] && [dictionary objectForKey: @"MiddleName"] != (id)[NSNull null]) {
      self.middleName = [dictionary objectForKey: @"MiddleName"];
    }
    if ([dictionary.allKeys containsObject: @"Suffix" ] && [dictionary objectForKey: @"Suffix"] != (id)[NSNull null]) {
      self.suffix = [dictionary objectForKey: @"Suffix"];
    }
    if ([dictionary.allKeys containsObject: @"Credentials" ] && [dictionary objectForKey: @"Credentials"] != (id)[NSNull null]) {
      self.credentials = [dictionary objectForKey: @"Credentials"];
    }
    if ([dictionary.allKeys containsObject: @"Salutation" ] && [dictionary objectForKey: @"Salutation"] != (id)[NSNull null]) {
      self.salutation = [dictionary objectForKey: @"Salutation"];
    }
    if ([dictionary.allKeys containsObject: @"Nickname" ] && [dictionary objectForKey: @"Nickname"] != (id)[NSNull null]) {
      self.nickname = [dictionary objectForKey: @"Nickname"];
    }
  }
  return self;
}

- (instancetype)initWithByteArray: (uint8_t*)byteArray length:(uint32_t)len {
  ::PersonName obj = CppBondSerializer<::PersonName>::deserializeFromByteArray(byteArray, len);
  return [self initWithBondObject: &obj];
}

- (void*)toBondObject {
  ::PersonName* obj = new PersonName();
  if (self.firstName != nil) obj->FirstName.set_value().set([self.firstName cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.lastName != nil) obj->LastName.set_value().set([self.lastName cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.middleName != nil) obj->MiddleName.set_value().set([self.middleName cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.suffix != nil) obj->Suffix.set_value().set([self.suffix cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.credentials != nil) obj->Credentials.set_value().set([self.credentials cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.salutation != nil) obj->Salutation.set_value().set([self.salutation cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.nickname != nil) obj->Nickname.set_value().set([self.nickname cStringUsingEncoding:NSUTF8StringEncoding]);
  return obj;
}

-(const uint8_t*) toByteArray: (uint32_t*)resultLen {
  auto obj = (::PersonName*)[self toBondObject];
  return CppBondSerializer<::PersonName>::serializeToByteArray(*obj, resultLen);
}

@end
