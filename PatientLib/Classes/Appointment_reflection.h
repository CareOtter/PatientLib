
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.3.0.5
//   File : Appointment_reflection.h
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#pragma once

#include "Appointment_types.h"
#include <bond/core/reflection.h>
#include "BaseClasses_reflection.h"

namespace HealthCare
{
namespace Schemas
{
    //
    // Appointment
    //
    struct Appointment::Schema
    {
        typedef ::HealthCare::Schemas::BaseEntity base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_StartDate_metadata;
        private: static const bond::Metadata s_DurationMinutes_metadata;
        private: static const bond::Metadata s_Status_metadata;
        private: static const bond::Metadata s_ReasonForAppointment_metadata;
        private: static const bond::Metadata s_AppointmentType_metadata;
        private: static const bond::Metadata s_RoomName_metadata;
        private: static const bond::Metadata s_NoteId_metadata;

        public: struct var
        {
            // StartDate
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                Appointment,
                bond::maybe<bond::nullable<int64_t> >,
                &Appointment::StartDate,
                &s_StartDate_metadata
            > StartDate;
        
            // DurationMinutes
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                Appointment,
                bond::maybe<bond::nullable<int64_t> >,
                &Appointment::DurationMinutes,
                &s_DurationMinutes_metadata
            > DurationMinutes;
        
            // Status
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                Appointment,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::AppointmentStatus> >,
                &Appointment::Status,
                &s_Status_metadata
            > Status;
        
            // ReasonForAppointment
            typedef bond::reflection::FieldTemplate<
                3,
                bond::reflection::optional_field_modifier,
                Appointment,
                bond::maybe<bond::nullable<std::string> >,
                &Appointment::ReasonForAppointment,
                &s_ReasonForAppointment_metadata
            > ReasonForAppointment;
        
            // AppointmentType
            typedef bond::reflection::FieldTemplate<
                4,
                bond::reflection::optional_field_modifier,
                Appointment,
                bond::maybe<bond::nullable<std::string> >,
                &Appointment::AppointmentType,
                &s_AppointmentType_metadata
            > AppointmentType;
        
            // RoomName
            typedef bond::reflection::FieldTemplate<
                5,
                bond::reflection::optional_field_modifier,
                Appointment,
                bond::maybe<bond::nullable<std::string> >,
                &Appointment::RoomName,
                &s_RoomName_metadata
            > RoomName;
        
            // NoteId
            typedef bond::reflection::FieldTemplate<
                6,
                bond::reflection::optional_field_modifier,
                Appointment,
                bond::maybe<bond::nullable<std::string> >,
                &Appointment::NoteId,
                &s_NoteId_metadata
            > NoteId;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::NoteId>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::RoomName>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::AppointmentType>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::ReasonForAppointment>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::Status>::type fields5;
        private: typedef boost::mpl::push_front<fields5, var::DurationMinutes>::type fields6;
        private: typedef boost::mpl::push_front<fields6, var::StartDate>::type fields7;

        public: typedef fields7::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("Appointment", "HealthCare.Schemas.Appointment",
                bond::reflection::Attributes()
            );
        }
    };
    

    
} // namespace Schemas
} // namespace HealthCare
