
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.3.0.5
//   File : BasePerson_reflection.h
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#pragma once

#include "BasePerson_types.h"
#include <bond/core/reflection.h>
#include "BaseClasses_reflection.h"
#include "ImageResource_reflection.h"

namespace HealthCare
{
namespace Schemas
{
    //
    // PersonName
    //
    struct PersonName::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_FirstName_metadata;
        private: static const bond::Metadata s_LastName_metadata;
        private: static const bond::Metadata s_MiddleName_metadata;
        private: static const bond::Metadata s_Suffix_metadata;
        private: static const bond::Metadata s_Credentials_metadata;
        private: static const bond::Metadata s_Salutation_metadata;
        private: static const bond::Metadata s_Nickname_metadata;

        public: struct var
        {
            // FirstName
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                PersonName,
                bond::maybe<bond::nullable<std::string> >,
                &PersonName::FirstName,
                &s_FirstName_metadata
            > FirstName;
        
            // LastName
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                PersonName,
                bond::maybe<bond::nullable<std::string> >,
                &PersonName::LastName,
                &s_LastName_metadata
            > LastName;
        
            // MiddleName
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                PersonName,
                bond::maybe<bond::nullable<std::string> >,
                &PersonName::MiddleName,
                &s_MiddleName_metadata
            > MiddleName;
        
            // Suffix
            typedef bond::reflection::FieldTemplate<
                3,
                bond::reflection::optional_field_modifier,
                PersonName,
                bond::maybe<bond::nullable<std::string> >,
                &PersonName::Suffix,
                &s_Suffix_metadata
            > Suffix;
        
            // Credentials
            typedef bond::reflection::FieldTemplate<
                4,
                bond::reflection::optional_field_modifier,
                PersonName,
                bond::maybe<bond::nullable<std::string> >,
                &PersonName::Credentials,
                &s_Credentials_metadata
            > Credentials;
        
            // Salutation
            typedef bond::reflection::FieldTemplate<
                5,
                bond::reflection::optional_field_modifier,
                PersonName,
                bond::maybe<bond::nullable<std::string> >,
                &PersonName::Salutation,
                &s_Salutation_metadata
            > Salutation;
        
            // Nickname
            typedef bond::reflection::FieldTemplate<
                6,
                bond::reflection::optional_field_modifier,
                PersonName,
                bond::maybe<bond::nullable<std::string> >,
                &PersonName::Nickname,
                &s_Nickname_metadata
            > Nickname;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::Nickname>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::Salutation>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::Credentials>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::Suffix>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::MiddleName>::type fields5;
        private: typedef boost::mpl::push_front<fields5, var::LastName>::type fields6;
        private: typedef boost::mpl::push_front<fields6, var::FirstName>::type fields7;

        public: typedef fields7::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("PersonName", "HealthCare.Schemas.PersonName",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // Address
    //
    struct Address::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Line1_metadata;
        private: static const bond::Metadata s_Line2_metadata;
        private: static const bond::Metadata s_Line3_metadata;
        private: static const bond::Metadata s_City_metadata;
        private: static const bond::Metadata s_State_metadata;
        private: static const bond::Metadata s_ZipCode_metadata;
        private: static const bond::Metadata s_Country_metadata;

        public: struct var
        {
            // Line1
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                Address,
                bond::maybe<bond::nullable<std::string> >,
                &Address::Line1,
                &s_Line1_metadata
            > Line1;
        
            // Line2
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                Address,
                bond::maybe<bond::nullable<std::string> >,
                &Address::Line2,
                &s_Line2_metadata
            > Line2;
        
            // Line3
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                Address,
                bond::maybe<bond::nullable<std::string> >,
                &Address::Line3,
                &s_Line3_metadata
            > Line3;
        
            // City
            typedef bond::reflection::FieldTemplate<
                3,
                bond::reflection::optional_field_modifier,
                Address,
                bond::maybe<bond::nullable<std::string> >,
                &Address::City,
                &s_City_metadata
            > City;
        
            // State
            typedef bond::reflection::FieldTemplate<
                4,
                bond::reflection::optional_field_modifier,
                Address,
                bond::maybe<bond::nullable<std::string> >,
                &Address::State,
                &s_State_metadata
            > State;
        
            // ZipCode
            typedef bond::reflection::FieldTemplate<
                5,
                bond::reflection::optional_field_modifier,
                Address,
                bond::maybe<bond::nullable<std::string> >,
                &Address::ZipCode,
                &s_ZipCode_metadata
            > ZipCode;
        
            // Country
            typedef bond::reflection::FieldTemplate<
                6,
                bond::reflection::optional_field_modifier,
                Address,
                bond::maybe<bond::nullable<std::string> >,
                &Address::Country,
                &s_Country_metadata
            > Country;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::Country>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::ZipCode>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::State>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::City>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::Line3>::type fields5;
        private: typedef boost::mpl::push_front<fields5, var::Line2>::type fields6;
        private: typedef boost::mpl::push_front<fields6, var::Line1>::type fields7;

        public: typedef fields7::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("Address", "HealthCare.Schemas.Address",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // TelephoneNumber
    //
    struct TelephoneNumber::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_CountryCode_metadata;
        private: static const bond::Metadata s_Number_metadata;
        private: static const bond::Metadata s_Ext_metadata;
        private: static const bond::Metadata s_Kind_metadata;

        public: struct var
        {
            // CountryCode
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                TelephoneNumber,
                bond::maybe<bond::nullable<int16_t> >,
                &TelephoneNumber::CountryCode,
                &s_CountryCode_metadata
            > CountryCode;
        
            // Number
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                TelephoneNumber,
                bond::maybe<bond::nullable<std::string> >,
                &TelephoneNumber::Number,
                &s_Number_metadata
            > Number;
        
            // Ext
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                TelephoneNumber,
                bond::maybe<bond::nullable<std::string> >,
                &TelephoneNumber::Ext,
                &s_Ext_metadata
            > Ext;
        
            // Kind
            typedef bond::reflection::FieldTemplate<
                3,
                bond::reflection::optional_field_modifier,
                TelephoneNumber,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::TelephoneNumberKind> >,
                &TelephoneNumber::Kind,
                &s_Kind_metadata
            > Kind;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::Kind>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::Ext>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::Number>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::CountryCode>::type fields4;

        public: typedef fields4::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("TelephoneNumber", "HealthCare.Schemas.TelephoneNumber",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // PersonContactInformation
    //
    struct PersonContactInformation::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_MailingAddress_metadata;
        private: static const bond::Metadata s_HomeTelephoneNumber_metadata;
        private: static const bond::Metadata s_CellularTelephoneNumber_metadata;
        private: static const bond::Metadata s_WorkTelephoneNumber_metadata;
        private: static const bond::Metadata s_EmailAddress_metadata;
        private: static const bond::Metadata s_FaxTelephoneNumber_metadata;

        public: struct var
        {
            // MailingAddress
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                PersonContactInformation,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::Address> >,
                &PersonContactInformation::MailingAddress,
                &s_MailingAddress_metadata
            > MailingAddress;
        
            // HomeTelephoneNumber
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                PersonContactInformation,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::TelephoneNumber> >,
                &PersonContactInformation::HomeTelephoneNumber,
                &s_HomeTelephoneNumber_metadata
            > HomeTelephoneNumber;
        
            // CellularTelephoneNumber
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                PersonContactInformation,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::TelephoneNumber> >,
                &PersonContactInformation::CellularTelephoneNumber,
                &s_CellularTelephoneNumber_metadata
            > CellularTelephoneNumber;
        
            // WorkTelephoneNumber
            typedef bond::reflection::FieldTemplate<
                3,
                bond::reflection::optional_field_modifier,
                PersonContactInformation,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::TelephoneNumber> >,
                &PersonContactInformation::WorkTelephoneNumber,
                &s_WorkTelephoneNumber_metadata
            > WorkTelephoneNumber;
        
            // EmailAddress
            typedef bond::reflection::FieldTemplate<
                4,
                bond::reflection::optional_field_modifier,
                PersonContactInformation,
                bond::maybe<bond::nullable<std::string> >,
                &PersonContactInformation::EmailAddress,
                &s_EmailAddress_metadata
            > EmailAddress;
        
            // FaxTelephoneNumber
            typedef bond::reflection::FieldTemplate<
                5,
                bond::reflection::optional_field_modifier,
                PersonContactInformation,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::TelephoneNumber> >,
                &PersonContactInformation::FaxTelephoneNumber,
                &s_FaxTelephoneNumber_metadata
            > FaxTelephoneNumber;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::FaxTelephoneNumber>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::EmailAddress>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::WorkTelephoneNumber>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::CellularTelephoneNumber>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::HomeTelephoneNumber>::type fields5;
        private: typedef boost::mpl::push_front<fields5, var::MailingAddress>::type fields6;

        public: typedef fields6::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("PersonContactInformation", "HealthCare.Schemas.PersonContactInformation",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // Demographics
    //
    struct Demographics::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Gender_metadata;
        private: static const bond::Metadata s_Language_metadata;
        private: static const bond::Metadata s_ContactInformation_metadata;
        private: static const bond::Metadata s_Ethnicity_metadata;
        private: static const bond::Metadata s_Race_metadata;

        public: struct var
        {
            // Gender
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                Demographics,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::Gender> >,
                &Demographics::Gender,
                &s_Gender_metadata
            > Gender;
        
            // Language
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                Demographics,
                bond::maybe<bond::nullable<std::string> >,
                &Demographics::Language,
                &s_Language_metadata
            > Language;
        
            // ContactInformation
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                Demographics,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::PersonContactInformation> >,
                &Demographics::ContactInformation,
                &s_ContactInformation_metadata
            > ContactInformation;
        
            // Ethnicity
            typedef bond::reflection::FieldTemplate<
                3,
                bond::reflection::optional_field_modifier,
                Demographics,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::EthnicityFlag> >,
                &Demographics::Ethnicity,
                &s_Ethnicity_metadata
            > Ethnicity;
        
            // Race
            typedef bond::reflection::FieldTemplate<
                4,
                bond::reflection::optional_field_modifier,
                Demographics,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::RaceFlag> >,
                &Demographics::Race,
                &s_Race_metadata
            > Race;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::Race>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::Ethnicity>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::ContactInformation>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::Language>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::Gender>::type fields5;

        public: typedef fields5::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("Demographics", "HealthCare.Schemas.Demographics",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // BasePerson
    //
    struct BasePerson::Schema
    {
        typedef ::HealthCare::Schemas::LocatableBaseEntity base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Name_metadata;
        private: static const bond::Metadata s_Demographics_metadata;
        private: static const bond::Metadata s_DateOfBirth_metadata;
        private: static const bond::Metadata s_DateOfDeath_metadata;
        private: static const bond::Metadata s_ImageResources_metadata;

        public: struct var
        {
            // Name
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                BasePerson,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::PersonName> >,
                &BasePerson::Name,
                &s_Name_metadata
            > Name;
        
            // Demographics
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                BasePerson,
                bond::nullable<bond::bonded< ::HealthCare::Schemas::Demographics> >,
                &BasePerson::Demographics,
                &s_Demographics_metadata
            > Demographics;
        
            // DateOfBirth
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                BasePerson,
                bond::maybe<bond::nullable<int64_t> >,
                &BasePerson::DateOfBirth,
                &s_DateOfBirth_metadata
            > DateOfBirth;
        
            // DateOfDeath
            typedef bond::reflection::FieldTemplate<
                3,
                bond::reflection::optional_field_modifier,
                BasePerson,
                bond::maybe<bond::nullable<int64_t> >,
                &BasePerson::DateOfDeath,
                &s_DateOfDeath_metadata
            > DateOfDeath;
        
            // ImageResources
            typedef bond::reflection::FieldTemplate<
                4,
                bond::reflection::optional_field_modifier,
                BasePerson,
                std::vector< ::HealthCare::Schemas::ImageResource>,
                &BasePerson::ImageResources,
                &s_ImageResources_metadata
            > ImageResources;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::ImageResources>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::DateOfDeath>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::DateOfBirth>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::Demographics>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::Name>::type fields5;

        public: typedef fields5::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("BasePerson", "HealthCare.Schemas.BasePerson",
                bond::reflection::Attributes()
            );
        }
    };
    

    
} // namespace Schemas
} // namespace HealthCare
