
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.3.0.5
//   File : BaseClasses_types.cpp
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#include "BaseClasses_reflection.h"
#include <bond/core/exception.h>

namespace HealthCare
{
namespace Schemas
{
    
    const bond::Metadata BaseItem::Schema::metadata
        = BaseItem::Schema::GetMetadata();
    
    const bond::Metadata BaseItem::Schema::s_Id_metadata
        = bond::reflection::MetadataInit(bond::nothing, "Id");
    
    const bond::Metadata BaseItem::Schema::s_CreatedDate_metadata
        = bond::reflection::MetadataInit(bond::nothing, "CreatedDate");
    
    const bond::Metadata BaseItem::Schema::s_LastModifiedDate_metadata
        = bond::reflection::MetadataInit(bond::nothing, "LastModifiedDate");

    
    const bond::Metadata BaseEntity::Schema::metadata
        = BaseEntity::Schema::GetMetadata();
    
    const bond::Metadata BaseEntity::Schema::s_Id_metadata
        = bond::reflection::MetadataInit("Id");
    
    const bond::Metadata BaseEntity::Schema::s_CreatedDate_metadata
        = bond::reflection::MetadataInit(bond::nothing, "CreatedDate");
    
    const bond::Metadata BaseEntity::Schema::s_LastModifiedDate_metadata
        = bond::reflection::MetadataInit(bond::nothing, "LastModifiedDate");

    
    const bond::Metadata Coordinates::Schema::metadata
        = Coordinates::Schema::GetMetadata();
    
    const bond::Metadata Coordinates::Schema::s_Longitude_metadata
        = bond::reflection::MetadataInit(bond::nothing, "Longitude");
    
    const bond::Metadata Coordinates::Schema::s_Latitude_metadata
        = bond::reflection::MetadataInit(bond::nothing, "Latitude");

    
    const bond::Metadata LocatableBaseEntity::Schema::metadata
        = LocatableBaseEntity::Schema::GetMetadata();
    
    const bond::Metadata LocatableBaseEntity::Schema::s_Coordinates_metadata
        = bond::reflection::MetadataInit("Coordinates");

    
    namespace _bond_enumerators
    {
    namespace NomenclatureType
    {
        const
        std::map<std::string, enum NomenclatureType> _name_to_value_NomenclatureType =
            boost::assign::map_list_of<std::string, enum NomenclatureType>
                ("ICD10", ICD10)
                ("ICD9", ICD9)
                ("SnoMed", SnoMed)
                ("Unii", Unii)
                ("RxNorm", RxNorm)
                ("Cvx", Cvx)
                ("Loinc", Loinc)
                ("NDC", NDC)
                ("CPT", CPT)
                ("MEDCIN", MEDCIN)
                ("DDI", DDI);

        const
        std::map<enum NomenclatureType, std::string> _value_to_name_NomenclatureType =
            bond::reverse_map(_name_to_value_NomenclatureType);

        const std::string& ToString(enum NomenclatureType value)
        {
            std::map<enum NomenclatureType, std::string>::const_iterator it =
                GetValueToNameMap(value).find(value);

            if (GetValueToNameMap(value).end() == it)
                bond::InvalidEnumValueException(value, "NomenclatureType");

            return it->second;
        }

        void FromString(const std::string& name, enum NomenclatureType& value)
        {
            std::map<std::string, enum NomenclatureType>::const_iterator it =
                _name_to_value_NomenclatureType.find(name);

            if (_name_to_value_NomenclatureType.end() == it)
                bond::InvalidEnumValueException(name.c_str(), "NomenclatureType");

            value = it->second;
        }

    } // namespace NomenclatureType
    } // namespace _bond_enumerators

    
    const bond::Metadata Nomenclature::Schema::metadata
        = Nomenclature::Schema::GetMetadata();
    
    const bond::Metadata Nomenclature::Schema::s_Type_metadata
        = bond::reflection::MetadataInit(bond::nothing, "Type");
    
    const bond::Metadata Nomenclature::Schema::s_Code_metadata
        = bond::reflection::MetadataInit(bond::nothing, "Code");
    
    const bond::Metadata Nomenclature::Schema::s_Name_metadata
        = bond::reflection::MetadataInit(bond::nothing, "Name");

    
    const bond::Metadata BaseClinicalItem::Schema::metadata
        = BaseClinicalItem::Schema::GetMetadata();
    
    const bond::Metadata BaseClinicalItem::Schema::s_Name_metadata
        = bond::reflection::MetadataInit(bond::nothing, "Name");
    
    const bond::Metadata BaseClinicalItem::Schema::s_Status_metadata
        = bond::reflection::MetadataInit(bond::nothing, "Status");
    
    const bond::Metadata BaseClinicalItem::Schema::s_NomenclatureIds_metadata
        = bond::reflection::MetadataInit("NomenclatureIds");
    
    const bond::Metadata BaseClinicalItem::Schema::s_ClinicalDescription_metadata
        = bond::reflection::MetadataInit(bond::nothing, "ClinicalDescription");
    
    const bond::Metadata BaseClinicalItem::Schema::s_ReportingSource_metadata
        = bond::reflection::MetadataInit(bond::nothing, "ReportingSource");
    
    const bond::Metadata BaseClinicalItem::Schema::s_Comments_metadata
        = bond::reflection::MetadataInit(bond::nothing, "Comments");

    
} // namespace Schemas
} // namespace HealthCare
