
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.3.0.5
//   File : Order_reflection.h
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#pragma once

#include "Order_types.h"
#include <bond/core/reflection.h>
#include "BaseClasses_reflection.h"
#include "Observation_reflection.h"

namespace HealthCare
{
namespace Schemas
{
    //
    // Order
    //
    struct Order::Schema
    {
        typedef ::HealthCare::Schemas::BaseClinicalItem base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_OrderDate_metadata;
        private: static const bond::Metadata s_Results_metadata;
        private: static const bond::Metadata s_ScheduledDate_metadata;
        private: static const bond::Metadata s_Priority_metadata;
        private: static const bond::Metadata s_OrderingProvider_metadata;
        private: static const bond::Metadata s_OrderType_metadata;
        private: static const bond::Metadata s_PerformingFacility_metadata;
        private: static const bond::Metadata s_CopyTo_metadata;
        private: static const bond::Metadata s_OrderItemSpecificInformation_metadata;
        private: static const bond::Metadata s_CollectionInfo_metadata;
        private: static const bond::Metadata s_PatientInstructions_metadata;
        private: static const bond::Metadata s_PerformingFacilityInstructions_metadata;
        private: static const bond::Metadata s_OrderingProviderName_metadata;

        public: struct var
        {
            // OrderDate
            typedef bond::reflection::FieldTemplate<
                0,
                bond::reflection::optional_field_modifier,
                Order,
                bond::maybe<bond::nullable<int64_t> >,
                &Order::OrderDate,
                &s_OrderDate_metadata
            > OrderDate;
        
            // Results
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                Order,
                bond::nullable<bond::bonded< ::HealthCare::Schemas::BaseItemCollection< ::HealthCare::Schemas::Observation> > >,
                &Order::Results,
                &s_Results_metadata
            > Results;
        
            // ScheduledDate
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                Order,
                bond::maybe<bond::nullable<int64_t> >,
                &Order::ScheduledDate,
                &s_ScheduledDate_metadata
            > ScheduledDate;
        
            // Priority
            typedef bond::reflection::FieldTemplate<
                3,
                bond::reflection::optional_field_modifier,
                Order,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::OrderPriority> >,
                &Order::Priority,
                &s_Priority_metadata
            > Priority;
        
            // OrderingProvider
            typedef bond::reflection::FieldTemplate<
                4,
                bond::reflection::optional_field_modifier,
                Order,
                bond::maybe<bond::nullable<int64_t> >,
                &Order::OrderingProvider,
                &s_OrderingProvider_metadata
            > OrderingProvider;
        
            // OrderType
            typedef bond::reflection::FieldTemplate<
                5,
                bond::reflection::optional_field_modifier,
                Order,
                bond::maybe<bond::nullable< ::HealthCare::Schemas::OrderType> >,
                &Order::OrderType,
                &s_OrderType_metadata
            > OrderType;
        
            // PerformingFacility
            typedef bond::reflection::FieldTemplate<
                6,
                bond::reflection::optional_field_modifier,
                Order,
                bond::maybe<bond::nullable<std::string> >,
                &Order::PerformingFacility,
                &s_PerformingFacility_metadata
            > PerformingFacility;
        
            // CopyTo
            typedef bond::reflection::FieldTemplate<
                7,
                bond::reflection::optional_field_modifier,
                Order,
                bond::maybe<bond::nullable<std::string> >,
                &Order::CopyTo,
                &s_CopyTo_metadata
            > CopyTo;
        
            // OrderItemSpecificInformation
            typedef bond::reflection::FieldTemplate<
                8,
                bond::reflection::optional_field_modifier,
                Order,
                bond::maybe<bond::nullable<std::string> >,
                &Order::OrderItemSpecificInformation,
                &s_OrderItemSpecificInformation_metadata
            > OrderItemSpecificInformation;
        
            // CollectionInfo
            typedef bond::reflection::FieldTemplate<
                9,
                bond::reflection::optional_field_modifier,
                Order,
                bond::maybe<bond::nullable<std::string> >,
                &Order::CollectionInfo,
                &s_CollectionInfo_metadata
            > CollectionInfo;
        
            // PatientInstructions
            typedef bond::reflection::FieldTemplate<
                10,
                bond::reflection::optional_field_modifier,
                Order,
                bond::maybe<bond::nullable<std::string> >,
                &Order::PatientInstructions,
                &s_PatientInstructions_metadata
            > PatientInstructions;
        
            // PerformingFacilityInstructions
            typedef bond::reflection::FieldTemplate<
                11,
                bond::reflection::optional_field_modifier,
                Order,
                bond::maybe<bond::nullable<std::string> >,
                &Order::PerformingFacilityInstructions,
                &s_PerformingFacilityInstructions_metadata
            > PerformingFacilityInstructions;
        
            // OrderingProviderName
            typedef bond::reflection::FieldTemplate<
                12,
                bond::reflection::optional_field_modifier,
                Order,
                bond::maybe<bond::nullable<std::string> >,
                &Order::OrderingProviderName,
                &s_OrderingProviderName_metadata
            > OrderingProviderName;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::OrderingProviderName>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::PerformingFacilityInstructions>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::PatientInstructions>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::CollectionInfo>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::OrderItemSpecificInformation>::type fields5;
        private: typedef boost::mpl::push_front<fields5, var::CopyTo>::type fields6;
        private: typedef boost::mpl::push_front<fields6, var::PerformingFacility>::type fields7;
        private: typedef boost::mpl::push_front<fields7, var::OrderType>::type fields8;
        private: typedef boost::mpl::push_front<fields8, var::OrderingProvider>::type fields9;
        private: typedef boost::mpl::push_front<fields9, var::Priority>::type fields10;
        private: typedef boost::mpl::push_front<fields10, var::ScheduledDate>::type fields11;
        private: typedef boost::mpl::push_front<fields11, var::Results>::type fields12;
        private: typedef boost::mpl::push_front<fields12, var::OrderDate>::type fields13;

        public: typedef fields13::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("Order", "HealthCare.Schemas.Order",
                bond::reflection::Attributes()
            );
        }
    };
    

    
} // namespace Schemas
} // namespace HealthCare
