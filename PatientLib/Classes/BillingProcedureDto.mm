//***************************************************
// This code was generated by a tool.  Do not modify.
//***************************************************

#import <Foundation/Foundation.h>
#import "CppBondSerializer.h"
#import <BillingProcedure_reflection.h>
#import <BillingProcedureDto.h>
#import <NomenclatureDto.h>

@implementation BillingProcedureDto

- (instancetype)initWithBondObject:(void*)obj {
  if (self = [super init]) {
    ::BillingProcedure* castObj = (::BillingProcedure*)obj;
    if (!castObj->Name.is_nothing() && castObj->Name.value().hasvalue()) self.name =  [[NSString alloc] initWithUTF8String: castObj->Name.value().value().c_str()];
    if (!castObj->Id.is_nothing() && castObj->Id.value().hasvalue()) self.id =  [[NSString alloc] initWithUTF8String: castObj->Id.value().value().c_str()];
    if (!castObj->Nomenclature.is_nothing() && castObj->Nomenclature.value().hasvalue()) self.nomenclature =  [[NomenclatureDto alloc] initWithBondObject: &(castObj->Nomenclature.value().value())];
  }
  return self;
}

- (instancetype) initWithJson: (NSString*)json {
  NSError* error = nil;
  NSData* jsonData = [json dataUsingEncoding:NSUTF8StringEncoding];
  id jsonDictionary = [NSJSONSerialization JSONObjectWithData:jsonData options: kNilOptions error: &error];

  if (error != nil) {
    if (error.code == 3840) return [super init]; // No Data
    return nil;
  }
  if (![jsonDictionary isKindOfClass:[NSDictionary class]]) return nil;
  return [self initWithJsonDictionary: jsonDictionary];
}

- (instancetype) initWithJsonDictionary: (NSDictionary*)dictionary {
  if (self = [super init]) {
    if ([dictionary.allKeys containsObject: @"Name" ] && [dictionary objectForKey: @"Name"] != (id)[NSNull null]) {
      self.name = [dictionary objectForKey: @"Name"];
    }
    if ([dictionary.allKeys containsObject: @"Id" ] && [dictionary objectForKey: @"Id"] != (id)[NSNull null]) {
      self.id = [dictionary objectForKey: @"Id"];
    }
    if ([dictionary.allKeys containsObject: @"Nomenclature" ] && [dictionary objectForKey: @"Nomenclature"] != (id)[NSNull null]) {
      self.nomenclature = [[NomenclatureDto alloc] initWithJsonDictionary:[dictionary objectForKey: @"Nomenclature"]];
    }
  }
  return self;
}

- (instancetype)initWithByteArray: (uint8_t*)byteArray length:(uint32_t)len {
  ::BillingProcedure obj = CppBondSerializer<::BillingProcedure>::deserializeFromByteArray(byteArray, len);
  return [self initWithBondObject: &obj];
}

- (void*)toBondObject {
  ::BillingProcedure* obj = new BillingProcedure();
  if (self.name != nil) obj->Name.set_value().set([self.name cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.id != nil) obj->Id.set_value().set([self.id cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.nomenclature != nil) obj->Nomenclature.set_value().set(*(::Nomenclature*)[self.nomenclature toBondObject]);
  return obj;
}

-(const uint8_t*) toByteArray: (uint32_t*)resultLen {
  auto obj = (::BillingProcedure*)[self toBondObject];
  return CppBondSerializer<::BillingProcedure>::serializeToByteArray(*obj, resultLen);
}

@end
