
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.3.0.5
//   File : Content_reflection.h
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#pragma once

#include "Content_types.h"
#include <bond/core/reflection.h>
#include "BaseClasses_reflection.h"

namespace HealthCare
{
namespace Schemas
{
    //
    // AdministrationRouteAndForm
    //
    struct AdministrationRouteAndForm::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Form_metadata;
        private: static const bond::Metadata s_Route_metadata;

        public: struct var
        {
            // Form
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                AdministrationRouteAndForm,
                bond::maybe<bond::nullable<std::string> >,
                &AdministrationRouteAndForm::Form,
                &s_Form_metadata
            > Form;
        
            // Route
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                AdministrationRouteAndForm,
                bond::maybe<bond::nullable<std::string> >,
                &AdministrationRouteAndForm::Route,
                &s_Route_metadata
            > Route;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::Route>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::Form>::type fields2;

        public: typedef fields2::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("AdministrationRouteAndForm", "HealthCare.Schemas.AdministrationRouteAndForm",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // MedicationContentItem
    //
    struct MedicationContentItem::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_NDC_metadata;
        private: static const bond::Metadata s_RxNorm_metadata;
        private: static const bond::Metadata s_MedicalName_metadata;
        private: static const bond::Metadata s_CommonName_metadata;
        private: static const bond::Metadata s_Strength_metadata;
        private: static const bond::Metadata s_AdministrationRouteAndForms_metadata;

        public: struct var
        {
            // NDC
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                MedicationContentItem,
                bond::maybe<bond::nullable<std::string> >,
                &MedicationContentItem::NDC,
                &s_NDC_metadata
            > NDC;
        
            // RxNorm
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                MedicationContentItem,
                bond::maybe<bond::nullable<std::string> >,
                &MedicationContentItem::RxNorm,
                &s_RxNorm_metadata
            > RxNorm;
        
            // MedicalName
            typedef bond::reflection::FieldTemplate<
                3,
                bond::reflection::optional_field_modifier,
                MedicationContentItem,
                bond::maybe<bond::nullable<std::string> >,
                &MedicationContentItem::MedicalName,
                &s_MedicalName_metadata
            > MedicalName;
        
            // CommonName
            typedef bond::reflection::FieldTemplate<
                4,
                bond::reflection::optional_field_modifier,
                MedicationContentItem,
                bond::maybe<bond::nullable<std::string> >,
                &MedicationContentItem::CommonName,
                &s_CommonName_metadata
            > CommonName;
        
            // Strength
            typedef bond::reflection::FieldTemplate<
                5,
                bond::reflection::optional_field_modifier,
                MedicationContentItem,
                bond::maybe<bond::nullable<std::string> >,
                &MedicationContentItem::Strength,
                &s_Strength_metadata
            > Strength;
        
            // AdministrationRouteAndForms
            typedef bond::reflection::FieldTemplate<
                6,
                bond::reflection::optional_field_modifier,
                MedicationContentItem,
                bond::maybe<std::vector< ::HealthCare::Schemas::AdministrationRouteAndForm> >,
                &MedicationContentItem::AdministrationRouteAndForms,
                &s_AdministrationRouteAndForms_metadata
            > AdministrationRouteAndForms;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::AdministrationRouteAndForms>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::Strength>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::CommonName>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::MedicalName>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::RxNorm>::type fields5;
        private: typedef boost::mpl::push_front<fields5, var::NDC>::type fields6;

        public: typedef fields6::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("MedicationContentItem", "HealthCare.Schemas.MedicationContentItem",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // FrequencyContentItem
    //
    struct FrequencyContentItem::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Snomed_metadata;
        private: static const bond::Metadata s_MaxDosesPerDay_metadata;
        private: static const bond::Metadata s_FrequencyText_metadata;

        public: struct var
        {
            // Snomed
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                FrequencyContentItem,
                bond::maybe<bond::nullable<std::string> >,
                &FrequencyContentItem::Snomed,
                &s_Snomed_metadata
            > Snomed;
        
            // MaxDosesPerDay
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                FrequencyContentItem,
                bond::maybe<bond::nullable<int64_t> >,
                &FrequencyContentItem::MaxDosesPerDay,
                &s_MaxDosesPerDay_metadata
            > MaxDosesPerDay;
        
            // FrequencyText
            typedef bond::reflection::FieldTemplate<
                3,
                bond::reflection::optional_field_modifier,
                FrequencyContentItem,
                bond::maybe<bond::nullable<std::string> >,
                &FrequencyContentItem::FrequencyText,
                &s_FrequencyText_metadata
            > FrequencyText;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::FrequencyText>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::MaxDosesPerDay>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::Snomed>::type fields3;

        public: typedef fields3::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("FrequencyContentItem", "HealthCare.Schemas.FrequencyContentItem",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // SigInstructionContentItem
    //
    struct SigInstructionContentItem::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Sig_metadata;

        public: struct var
        {
            // Sig
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                SigInstructionContentItem,
                bond::maybe<bond::nullable<std::string> >,
                &SigInstructionContentItem::Sig,
                &s_Sig_metadata
            > Sig;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::Sig>::type fields1;

        public: typedef fields1::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("SigInstructionContentItem", "HealthCare.Schemas.SigInstructionContentItem",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // OrderContentItem
    //
    struct OrderContentItem::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Name_metadata;
        private: static const bond::Metadata s_Nomenclatures_metadata;

        public: struct var
        {
            // Name
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                OrderContentItem,
                bond::maybe<bond::nullable<std::string> >,
                &OrderContentItem::Name,
                &s_Name_metadata
            > Name;
        
            // Nomenclatures
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                OrderContentItem,
                bond::maybe<std::vector< ::HealthCare::Schemas::Nomenclature> >,
                &OrderContentItem::Nomenclatures,
                &s_Nomenclatures_metadata
            > Nomenclatures;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::Nomenclatures>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::Name>::type fields2;

        public: typedef fields2::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("OrderContentItem", "HealthCare.Schemas.OrderContentItem",
                bond::reflection::Attributes()
            );
        }
    };
    

    //
    // AllergyContentItem
    //
    struct AllergyContentItem::Schema
    {
        typedef bond::no_base base;

        static const bond::Metadata metadata;
        
        private: static const bond::Metadata s_Name_metadata;
        private: static const bond::Metadata s_Nomenclatures_metadata;

        public: struct var
        {
            // Name
            typedef bond::reflection::FieldTemplate<
                1,
                bond::reflection::optional_field_modifier,
                AllergyContentItem,
                bond::maybe<bond::nullable<std::string> >,
                &AllergyContentItem::Name,
                &s_Name_metadata
            > Name;
        
            // Nomenclatures
            typedef bond::reflection::FieldTemplate<
                2,
                bond::reflection::optional_field_modifier,
                AllergyContentItem,
                bond::maybe<std::vector< ::HealthCare::Schemas::Nomenclature> >,
                &AllergyContentItem::Nomenclatures,
                &s_Nomenclatures_metadata
            > Nomenclatures;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::Nomenclatures>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::Name>::type fields2;

        public: typedef fields2::type fields;
        
        
        static bond::Metadata GetMetadata()
        {
            return bond::reflection::MetadataInit("AllergyContentItem", "HealthCare.Schemas.AllergyContentItem",
                bond::reflection::Attributes()
            );
        }
    };
    

    
} // namespace Schemas
} // namespace HealthCare
