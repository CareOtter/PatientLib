//***************************************************
// This code was generated by a tool.  Do not modify.
//***************************************************

#import <Foundation/Foundation.h>
#import "CppBondSerializer.h"
#import <BaseObservationSet_reflection.h>
#import <ObsCatalogSetItemDto.h>
#import <ObservationDescriptionDto.h>

@implementation ObsCatalogSetItemDto

- (instancetype)initWithBondObject:(void*)obj {
  if (self = [super init]) {
    ::ObsCatalogSetItem* castObj = (::ObsCatalogSetItem*)obj;
    if (!castObj->ObsName.is_nothing() && castObj->ObsName.value().hasvalue()) self.obsName =  [[NSString alloc] initWithUTF8String: castObj->ObsName.value().value().c_str()];
    if (!castObj->DisplaySequence.is_nothing() && castObj->DisplaySequence.value().hasvalue()) self.displaySequence =  [[NSNumber alloc] initWithShort: castObj->DisplaySequence.value().value()];
    if (!castObj->IsActive.is_nothing() && castObj->IsActive.value().hasvalue()) self.isActive =  [[NSNumber alloc] initWithShort: castObj->IsActive.value().value()];
    if (!castObj->PWItemType.is_nothing() && castObj->PWItemType.value().hasvalue()) self.pWItemType =  [[NSNumber alloc] initWithDouble: castObj->PWItemType.value().value()];
    if (!castObj->PWNewParagraph.is_nothing() && castObj->PWNewParagraph.value().hasvalue()) self.pWNewParagraph =  [[NSNumber alloc] initWithShort: castObj->PWNewParagraph.value().value()];
    if (!castObj->PWStatementDesc.is_nothing() && castObj->PWStatementDesc.value().hasvalue()) self.pWStatementDesc =  [[NSString alloc] initWithUTF8String: castObj->PWStatementDesc.value().value().c_str()];
    if (!castObj->ObsCatalogSetName.is_nothing() && castObj->ObsCatalogSetName.value().hasvalue()) self.obsCatalogSetName =  [[NSString alloc] initWithUTF8String: castObj->ObsCatalogSetName.value().value().c_str()];
    if (!castObj->ItemLineNo.is_nothing() && castObj->ItemLineNo.value().hasvalue()) self.itemLineNo =  [[NSNumber alloc] initWithShort: castObj->ItemLineNo.value().value()];
    if (!castObj->ItemPosition.is_nothing() && castObj->ItemPosition.value().hasvalue()) self.itemPosition =  [[NSNumber alloc] initWithShort: castObj->ItemPosition.value().value()];
    if (!castObj->ItemSeparator.is_nothing() && castObj->ItemSeparator.value().hasvalue()) self.itemSeparator =  [[NSString alloc] initWithUTF8String: castObj->ItemSeparator.value().value().c_str()];
    if (!castObj->CellColumnIndex.is_nothing() && castObj->CellColumnIndex.value().hasvalue()) self.cellColumnIndex =  [[NSNumber alloc] initWithShort: castObj->CellColumnIndex.value().value()];
    if (!castObj->CellRowIndex.is_nothing() && castObj->CellRowIndex.value().hasvalue()) self.cellRowIndex =  [[NSNumber alloc] initWithShort: castObj->CellRowIndex.value().value()];
    if (!castObj->CellRowSpan.is_nothing() && castObj->CellRowSpan.value().hasvalue()) self.cellRowSpan =  [[NSNumber alloc] initWithShort: castObj->CellRowSpan.value().value()];
    if (!castObj->CellColumnSpan.is_nothing() && castObj->CellColumnSpan.value().hasvalue()) self.cellColumnSpan =  [[NSNumber alloc] initWithShort: castObj->CellColumnSpan.value().value()];
    if (!castObj->ResultGridPosition.is_nothing() && castObj->ResultGridPosition.value().hasvalue()) self.resultGridPosition =  [[NSNumber alloc] initWithDouble: castObj->ResultGridPosition.value().value()];
    if (!castObj->DisplayRowLabel.is_nothing() && castObj->DisplayRowLabel.value().hasvalue()) self.displayRowLabel =  [[NSString alloc] initWithUTF8String: castObj->DisplayRowLabel.value().value().c_str()];
    if (!castObj->ObservationDescription.is_nothing() && castObj->ObservationDescription.value().hasvalue()) self.observationDescription =  [[ObservationDescriptionDto alloc] initWithBondObject: &(castObj->ObservationDescription.value().value())];
  }
  return self;
}

- (instancetype) initWithJson: (NSString*)json {
  NSError* error = nil;
  NSData* jsonData = [json dataUsingEncoding:NSUTF8StringEncoding];
  id jsonDictionary = [NSJSONSerialization JSONObjectWithData:jsonData options: kNilOptions error: &error];

  if (error != nil) {
    if (error.code == 3840) return [super init]; // No Data
    return nil;
  }
  if (![jsonDictionary isKindOfClass:[NSDictionary class]]) return nil;
  return [self initWithJsonDictionary: jsonDictionary];
}

- (instancetype) initWithJsonDictionary: (NSDictionary*)dictionary {
  if (self = [super init]) {
    if ([dictionary.allKeys containsObject: @"ObsName" ] && [dictionary objectForKey: @"ObsName"] != (id)[NSNull null]) {
      self.obsName = [dictionary objectForKey: @"ObsName"];
    }
    if ([dictionary.allKeys containsObject: @"DisplaySequence" ] && [dictionary objectForKey: @"DisplaySequence"] != (id)[NSNull null]) {
      self.displaySequence = [dictionary objectForKey: @"DisplaySequence"];
    }
    if ([dictionary.allKeys containsObject: @"IsActive" ] && [dictionary objectForKey: @"IsActive"] != (id)[NSNull null]) {
      self.isActive = [dictionary objectForKey: @"IsActive"];
    }
    if ([dictionary.allKeys containsObject: @"PWItemType" ] && [dictionary objectForKey: @"PWItemType"] != (id)[NSNull null]) {
      self.pWItemType = [dictionary objectForKey: @"PWItemType"];
    }
    if ([dictionary.allKeys containsObject: @"PWNewParagraph" ] && [dictionary objectForKey: @"PWNewParagraph"] != (id)[NSNull null]) {
      self.pWNewParagraph = [dictionary objectForKey: @"PWNewParagraph"];
    }
    if ([dictionary.allKeys containsObject: @"PWStatementDesc" ] && [dictionary objectForKey: @"PWStatementDesc"] != (id)[NSNull null]) {
      self.pWStatementDesc = [dictionary objectForKey: @"PWStatementDesc"];
    }
    if ([dictionary.allKeys containsObject: @"ObsCatalogSetName" ] && [dictionary objectForKey: @"ObsCatalogSetName"] != (id)[NSNull null]) {
      self.obsCatalogSetName = [dictionary objectForKey: @"ObsCatalogSetName"];
    }
    if ([dictionary.allKeys containsObject: @"ItemLineNo" ] && [dictionary objectForKey: @"ItemLineNo"] != (id)[NSNull null]) {
      self.itemLineNo = [dictionary objectForKey: @"ItemLineNo"];
    }
    if ([dictionary.allKeys containsObject: @"ItemPosition" ] && [dictionary objectForKey: @"ItemPosition"] != (id)[NSNull null]) {
      self.itemPosition = [dictionary objectForKey: @"ItemPosition"];
    }
    if ([dictionary.allKeys containsObject: @"ItemSeparator" ] && [dictionary objectForKey: @"ItemSeparator"] != (id)[NSNull null]) {
      self.itemSeparator = [dictionary objectForKey: @"ItemSeparator"];
    }
    if ([dictionary.allKeys containsObject: @"CellColumnIndex" ] && [dictionary objectForKey: @"CellColumnIndex"] != (id)[NSNull null]) {
      self.cellColumnIndex = [dictionary objectForKey: @"CellColumnIndex"];
    }
    if ([dictionary.allKeys containsObject: @"CellRowIndex" ] && [dictionary objectForKey: @"CellRowIndex"] != (id)[NSNull null]) {
      self.cellRowIndex = [dictionary objectForKey: @"CellRowIndex"];
    }
    if ([dictionary.allKeys containsObject: @"CellRowSpan" ] && [dictionary objectForKey: @"CellRowSpan"] != (id)[NSNull null]) {
      self.cellRowSpan = [dictionary objectForKey: @"CellRowSpan"];
    }
    if ([dictionary.allKeys containsObject: @"CellColumnSpan" ] && [dictionary objectForKey: @"CellColumnSpan"] != (id)[NSNull null]) {
      self.cellColumnSpan = [dictionary objectForKey: @"CellColumnSpan"];
    }
    if ([dictionary.allKeys containsObject: @"ResultGridPosition" ] && [dictionary objectForKey: @"ResultGridPosition"] != (id)[NSNull null]) {
      self.resultGridPosition = [dictionary objectForKey: @"ResultGridPosition"];
    }
    if ([dictionary.allKeys containsObject: @"DisplayRowLabel" ] && [dictionary objectForKey: @"DisplayRowLabel"] != (id)[NSNull null]) {
      self.displayRowLabel = [dictionary objectForKey: @"DisplayRowLabel"];
    }
    if ([dictionary.allKeys containsObject: @"ObservationDescription" ] && [dictionary objectForKey: @"ObservationDescription"] != (id)[NSNull null]) {
      self.observationDescription = [[ObservationDescriptionDto alloc] initWithJsonDictionary:[dictionary objectForKey: @"ObservationDescription"]];
    }
  }
  return self;
}

- (instancetype)initWithByteArray: (uint8_t*)byteArray length:(uint32_t)len {
  ::ObsCatalogSetItem obj = CppBondSerializer<::ObsCatalogSetItem>::deserializeFromByteArray(byteArray, len);
  return [self initWithBondObject: &obj];
}

- (void*)toBondObject {
  ::ObsCatalogSetItem* obj = new ObsCatalogSetItem();
  if (self.obsName != nil) obj->ObsName.set_value().set([self.obsName cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.displaySequence != nil) obj->DisplaySequence.set_value().set([self.displaySequence shortValue]);
  if (self.isActive != nil) obj->IsActive.set_value().set([self.isActive shortValue]);
  if (self.pWItemType != nil) obj->PWItemType.set_value().set([self.pWItemType doubleValue]);
  if (self.pWNewParagraph != nil) obj->PWNewParagraph.set_value().set([self.pWNewParagraph shortValue]);
  if (self.pWStatementDesc != nil) obj->PWStatementDesc.set_value().set([self.pWStatementDesc cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.obsCatalogSetName != nil) obj->ObsCatalogSetName.set_value().set([self.obsCatalogSetName cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.itemLineNo != nil) obj->ItemLineNo.set_value().set([self.itemLineNo shortValue]);
  if (self.itemPosition != nil) obj->ItemPosition.set_value().set([self.itemPosition shortValue]);
  if (self.itemSeparator != nil) obj->ItemSeparator.set_value().set([self.itemSeparator cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.cellColumnIndex != nil) obj->CellColumnIndex.set_value().set([self.cellColumnIndex shortValue]);
  if (self.cellRowIndex != nil) obj->CellRowIndex.set_value().set([self.cellRowIndex shortValue]);
  if (self.cellRowSpan != nil) obj->CellRowSpan.set_value().set([self.cellRowSpan shortValue]);
  if (self.cellColumnSpan != nil) obj->CellColumnSpan.set_value().set([self.cellColumnSpan shortValue]);
  if (self.resultGridPosition != nil) obj->ResultGridPosition.set_value().set([self.resultGridPosition doubleValue]);
  if (self.displayRowLabel != nil) obj->DisplayRowLabel.set_value().set([self.displayRowLabel cStringUsingEncoding:NSUTF8StringEncoding]);
  if (self.observationDescription != nil) obj->ObservationDescription.set_value().set(*(::ObservationDescription*)[self.observationDescription toBondObject]);
  return obj;
}

-(const uint8_t*) toByteArray: (uint32_t*)resultLen {
  auto obj = (::ObsCatalogSetItem*)[self toBondObject];
  return CppBondSerializer<::ObsCatalogSetItem>::serializeToByteArray(*obj, resultLen);
}

@end
